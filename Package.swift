// swift-tools-version:4.1
import PackageDescription

let package = Package(
    name: "AWSSDKSwift",
    products: [
        .library(name: "AWSSDKSwift", targets: ["Acm-Pca","Acm","Alexaforbusiness","Apigateway","Application-Autoscaling","Appstream","Appsync","Athena","Autoscaling-Plans","Autoscaling","Awsmigrationhub","Batch","Budgets","Ce","Cloud9","Clouddirectory","Cloudformation","Cloudfront","Cloudhsm","Cloudhsmv2","Cloudsearch","Cloudsearchdomain","Cloudtrail","Codebuild","Codecommit","Codedeploy","Codepipeline","Codestar","Cognito-Identity","Cognito-Idp","Cognito-Sync","Comprehend","Config","Connect","Cur","Datapipeline","Dax","Devicefarm","Directconnect","Discovery","Dlm","Dms","Ds","Dynamodb","Ec2","Ecr","Ecs","Eks","Elasticache","Elasticbeanstalk","Elasticfilesystem","Elasticloadbalancing","Elasticloadbalancingv2","Elasticmapreduce","Elastictranscoder","Email","Entitlement.Marketplace","Es","Events","Firehose","Fms","Gamelift","Glacier","Glue","Greengrass","Guardduty","Health","Iam","Importexport","Inspector","Iot-Data","Iot-Jobs-Data","Iot","Iot1Click-Devices","Iot1Click-Projects","Iotanalytics","Kinesis-Video-Archived-Media","Kinesis-Video-Media","Kinesis","Kinesisanalytics","Kinesisvideo","Kms","Lambda","Lex-Models","Lightsail","Logs","Machinelearning","Macie","Marketplacecommerceanalytics","Mediaconvert","Medialive","Mediapackage","Mediastore-Data","Mediastore","Mediatailor","Meteringmarketplace","Mobile","Mobileanalytics","Monitoring","Mq","Mturk-Requester","Neptune","Opsworks","Opsworkscm","Organizations","Pi","Pinpoint","Polly","Pricing","Rds","Redshift","Rekognition","Resource-Groups","Resourcegroupstaggingapi","Route53","Route53Domains","Runtime.Lex","Runtime.Sagemaker","S3","S3Middleware","Sagemaker","Sdb","Secretsmanager","Serverlessrepo","Servicecatalog","Servicediscovery","Shield","Sms","Snowball","Sns","Sqs","Ssm","States","Storagegateway","Streams.Dynamodb","Sts","Support","Swf","Transcribe","Translate","Waf-Regional","Waf","Workdocs","Workmail","Workspaces","Xray",]),
        .executable(name: "aws-sdk-swift-codegen", targets: ["CodeGenerator"])
    ],
    dependencies: [
        .package(url: "https://github.com/swift-aws/aws-sdk-swift-core.git", .upToNextMajor(from: "2.0.0-rc.1")),
        .package(url: "https://github.com/IBM-Swift/SwiftyJSON.git", .upToNextMajor(from: "17.0.2"))
    ],
    targets: [
        .target(name: "CodeGenerator", dependencies: ["AWSSDKSwiftCore", "SwiftyJSON"]),
        //.target(name: "AWSSDKSwift", dependencies: ["AWSSDKSwiftCore", "SwiftyJSON"]),

        .target(name: "Acm-Pca", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/acm-pca"),
        .target(name: "Acm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/acm"),
        .target(name: "Alexaforbusiness", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/alexaforbusiness"),
        .target(name: "Apigateway", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/apigateway"),
        .target(name: "Application-Autoscaling", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/application-autoscaling"),
        .target(name: "Appstream", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/appstream"),
        .target(name: "Appsync", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/appsync"),
        .target(name: "Athena", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/athena"),
        .target(name: "Autoscaling-Plans", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/autoscaling-plans"),
        .target(name: "Autoscaling", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/autoscaling"),
        .target(name: "Awsmigrationhub", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/AWSMigrationHub"),
        .target(name: "Batch", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/batch"),
        .target(name: "Budgets", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/budgets"),
        .target(name: "Ce", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ce"),
        .target(name: "Cloud9", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/Cloud9"),
        .target(name: "Clouddirectory", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/clouddirectory"),
        .target(name: "Cloudformation", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudformation"),
        .target(name: "Cloudfront", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudfront"),
        .target(name: "Cloudhsm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudhsm"),
        .target(name: "Cloudhsmv2", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudhsmv2"),
        .target(name: "Cloudsearch", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudsearch"),
        .target(name: "Cloudsearchdomain", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudsearchdomain"),
        .target(name: "Cloudtrail", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cloudtrail"),
        .target(name: "Codebuild", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/codebuild"),
        .target(name: "Codecommit", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/codecommit"),
        .target(name: "Codedeploy", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/codedeploy"),
        .target(name: "Codepipeline", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/codepipeline"),
        .target(name: "Codestar", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/codestar"),
        .target(name: "Cognito-Identity", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cognito-identity"),
        .target(name: "Cognito-Idp", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cognito-idp"),
        .target(name: "Cognito-Sync", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cognito-sync"),
        .target(name: "Comprehend", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/comprehend"),
        .target(name: "Config", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/config"),
        .target(name: "Connect", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/connect"),
        .target(name: "Cur", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/cur"),
        .target(name: "Datapipeline", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/datapipeline"),
        .target(name: "Dax", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/dax"),
        .target(name: "Devicefarm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/devicefarm"),
        .target(name: "Directconnect", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/directconnect"),
        .target(name: "Discovery", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/discovery"),
        .target(name: "Dlm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/dlm"),
        .target(name: "Dms", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/dms"),
        .target(name: "Ds", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ds"),
        .target(name: "Dynamodb", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/dynamodb"),
        .target(name: "Ec2", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ec2"),
        .target(name: "Ecr", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ecr"),
        .target(name: "Ecs", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ecs"),
        .target(name: "Eks", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/eks"),
        .target(name: "Elasticache", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticache"),
        .target(name: "Elasticbeanstalk", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticbeanstalk"),
        .target(name: "Elasticfilesystem", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticfilesystem"),
        .target(name: "Elasticloadbalancing", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticloadbalancing"),
        .target(name: "Elasticloadbalancingv2", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticloadbalancingv2"),
        .target(name: "Elasticmapreduce", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elasticmapreduce"),
        .target(name: "Elastictranscoder", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/elastictranscoder"),
        .target(name: "Email", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/email"),
        .target(name: "Entitlement.Marketplace", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/entitlement.marketplace"),
        .target(name: "Es", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/es"),
        .target(name: "Events", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/events"),
        .target(name: "Firehose", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/firehose"),
        .target(name: "Fms", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/fms"),
        .target(name: "Gamelift", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/gamelift"),
        .target(name: "Glacier", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/glacier"),
        .target(name: "Glue", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/glue"),
        .target(name: "Greengrass", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/greengrass"),
        .target(name: "Guardduty", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/GuardDuty"),
        .target(name: "Health", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/health"),
        .target(name: "Iam", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iam"),
        .target(name: "Importexport", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/importexport"),
        .target(name: "Inspector", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/inspector"),
        .target(name: "Iot-Data", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iot-data"),
        .target(name: "Iot-Jobs-Data", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iot-jobs-data"),
        .target(name: "Iot", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iot"),
        .target(name: "Iot1Click-Devices", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iot1click-devices"),
        .target(name: "Iot1Click-Projects", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iot1click-projects"),
        .target(name: "Iotanalytics", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/iotanalytics"),
        .target(name: "Kinesis-Video-Archived-Media", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kinesis-video-archived-media"),
        .target(name: "Kinesis-Video-Media", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kinesis-video-media"),
        .target(name: "Kinesis", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kinesis"),
        .target(name: "Kinesisanalytics", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kinesisanalytics"),
        .target(name: "Kinesisvideo", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kinesisvideo"),
        .target(name: "Kms", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/kms"),
        .target(name: "Lambda", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/lambda"),
        .target(name: "Lex-Models", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/lex-models"),
        .target(name: "Lightsail", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/lightsail"),
        .target(name: "Logs", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/logs"),
        .target(name: "Machinelearning", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/machinelearning"),
        .target(name: "Macie", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/macie"),
        .target(name: "Marketplacecommerceanalytics", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/marketplacecommerceanalytics"),
        .target(name: "Mediaconvert", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mediaconvert"),
        .target(name: "Medialive", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/medialive"),
        .target(name: "Mediapackage", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mediapackage"),
        .target(name: "Mediastore-Data", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mediastore-data"),
        .target(name: "Mediastore", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mediastore"),
        .target(name: "Mediatailor", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mediatailor"),
        .target(name: "Meteringmarketplace", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/meteringmarketplace"),
        .target(name: "Mobile", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mobile"),
        .target(name: "Mobileanalytics", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mobileanalytics"),
        .target(name: "Monitoring", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/monitoring"),
        .target(name: "Mq", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mq"),
        .target(name: "Mturk-Requester", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/mturk-requester"),
        .target(name: "Neptune", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/neptune"),
        .target(name: "Opsworks", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/opsworks"),
        .target(name: "Opsworkscm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/opsworkscm"),
        .target(name: "Organizations", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/organizations"),
        .target(name: "Pi", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/pi"),
        .target(name: "Pinpoint", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/pinpoint"),
        .target(name: "Polly", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/polly"),
        .target(name: "Pricing", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/pricing"),
        .target(name: "Rds", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/rds"),
        .target(name: "Redshift", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/redshift"),
        .target(name: "Rekognition", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/rekognition"),
        .target(name: "Resource-Groups", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/resource-groups"),
        .target(name: "Resourcegroupstaggingapi", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/resourcegroupstaggingapi"),
        .target(name: "Route53", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/route53"),
        .target(name: "Route53Domains", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/route53domains"),
        .target(name: "Runtime.Lex", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/runtime.lex"),
        .target(name: "Runtime.Sagemaker", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/runtime.sagemaker"),
        .target(name: "S3", dependencies: ["AWSSDKSwiftCore", "S3Middleware"], path: "./Sources/AWSSDKSwift/Services/s3"),
        .target(name: "Sagemaker", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/SageMaker"),
        .target(name: "Sdb", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/sdb"),
        .target(name: "Secretsmanager", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/secretsmanager"),
        .target(name: "Serverlessrepo", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/serverlessrepo"),
        .target(name: "Servicecatalog", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/servicecatalog"),
        .target(name: "Servicediscovery", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/servicediscovery"),
        .target(name: "Shield", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/shield"),
        .target(name: "Sms", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/sms"),
        .target(name: "Snowball", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/snowball"),
        .target(name: "Sns", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/sns"),
        .target(name: "Sqs", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/sqs"),
        .target(name: "Ssm", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/ssm"),
        .target(name: "States", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/states"),
        .target(name: "Storagegateway", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/storagegateway"),
        .target(name: "Streams.Dynamodb", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/streams.dynamodb"),
        .target(name: "Sts", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/sts"),
        .target(name: "Support", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/support"),
        .target(name: "Swf", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/swf"),
        .target(name: "Transcribe", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/transcribe"),
        .target(name: "Translate", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/translate"),
        .target(name: "Waf-Regional", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/waf-regional"),
        .target(name: "Waf", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/waf"),
        .target(name: "Workdocs", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/workdocs"),
        .target(name: "Workmail", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/workmail"),
        .target(name: "Workspaces", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/workspaces"),
        .target(name: "Xray", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Services/xray"),
        .target(name: "S3Middleware", dependencies: ["AWSSDKSwiftCore"], path: "./Sources/AWSSDKSwift/Middlewares/S3"),


        //.testTarget(name: "AWSSDKSwiftTests", dependencies: ["AWSSDKSwift"])
    ]
)
