// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension Connect {

    public struct HierarchyGroupSummary: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Name", required: false, type: .string)
        ]
        /// The identifier of the hierarchy group.
        public let id: String?
        /// The ARN for the hierarchy group.
        public let arn: String?
        /// The name of the hierarchy group.
        public let name: String?

        public init(id: String? = nil, arn: String? = nil, name: String? = nil) {
            self.id = id
            self.arn = arn
            self.name = name
        }

        private enum CodingKeys: String, CodingKey {
            case id = "Id"
            case arn = "Arn"
            case name = "Name"
        }
    }

    public struct ListUserHierarchyGroupsResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "UserHierarchyGroupSummaryList", required: false, type: .list), 
            AWSShapeMember(label: "NextToken", required: false, type: .string)
        ]
        /// An array of HierarchyGroupSummary objects.
        public let userHierarchyGroupSummaryList: [HierarchyGroupSummary]?
        /// A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.
        public let nextToken: String?

        public init(userHierarchyGroupSummaryList: [HierarchyGroupSummary]? = nil, nextToken: String? = nil) {
            self.userHierarchyGroupSummaryList = userHierarchyGroupSummaryList
            self.nextToken = nextToken
        }

        private enum CodingKeys: String, CodingKey {
            case userHierarchyGroupSummaryList = "UserHierarchyGroupSummaryList"
            case nextToken = "NextToken"
        }
    }

    public enum PhoneType: String, CustomStringConvertible, Codable {
        case softPhone = "SOFT_PHONE"
        case deskPhone = "DESK_PHONE"
        public var description: String { return self.rawValue }
    }

    public struct GetFederationTokenRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(instanceId: String) {
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
        }
    }

    public struct HierarchyLevel: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Name", required: false, type: .string)
        ]
        /// The identifier for the hierarchy group level.
        public let id: String?
        /// The ARN for the hierarchy group level.
        public let arn: String?
        /// The name of the hierarchy group level.
        public let name: String?

        public init(id: String? = nil, arn: String? = nil, name: String? = nil) {
            self.id = id
            self.arn = arn
            self.name = name
        }

        private enum CodingKeys: String, CodingKey {
            case id = "Id"
            case arn = "Arn"
            case name = "Name"
        }
    }

    public struct User: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Username", required: false, type: .string), 
            AWSShapeMember(label: "IdentityInfo", required: false, type: .structure), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "PhoneConfig", required: false, type: .structure), 
            AWSShapeMember(label: "SecurityProfileIds", required: false, type: .list), 
            AWSShapeMember(label: "DirectoryUserId", required: false, type: .string), 
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "HierarchyGroupId", required: false, type: .string), 
            AWSShapeMember(label: "RoutingProfileId", required: false, type: .string)
        ]
        /// The user name assigned to the user account.
        public let username: String?
        /// A UserIdentityInfo object.
        public let identityInfo: UserIdentityInfo?
        /// The ARN of the user account.
        public let arn: String?
        /// A UserPhoneConfig object.
        public let phoneConfig: UserPhoneConfig?
        /// The identifier(s) for the security profile assigned to the user.
        public let securityProfileIds: [String]?
        /// The directory Id for the user account in the existing directory used for identity management.
        public let directoryUserId: String?
        /// The identifier of the user account.
        public let id: String?
        /// The identifier for the hierarchy group assigned to the user.
        public let hierarchyGroupId: String?
        /// The identifier of the routing profile assigned to the user.
        public let routingProfileId: String?

        public init(username: String? = nil, identityInfo: UserIdentityInfo? = nil, arn: String? = nil, phoneConfig: UserPhoneConfig? = nil, securityProfileIds: [String]? = nil, directoryUserId: String? = nil, id: String? = nil, hierarchyGroupId: String? = nil, routingProfileId: String? = nil) {
            self.username = username
            self.identityInfo = identityInfo
            self.arn = arn
            self.phoneConfig = phoneConfig
            self.securityProfileIds = securityProfileIds
            self.directoryUserId = directoryUserId
            self.id = id
            self.hierarchyGroupId = hierarchyGroupId
            self.routingProfileId = routingProfileId
        }

        private enum CodingKeys: String, CodingKey {
            case username = "Username"
            case identityInfo = "IdentityInfo"
            case arn = "Arn"
            case phoneConfig = "PhoneConfig"
            case securityProfileIds = "SecurityProfileIds"
            case directoryUserId = "DirectoryUserId"
            case id = "Id"
            case hierarchyGroupId = "HierarchyGroupId"
            case routingProfileId = "RoutingProfileId"
        }
    }

    public struct ListUsersResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "UserSummaryList", required: false, type: .list)
        ]
        /// A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.
        public let nextToken: String?
        /// An array of UserSummary objects that contain information about the users in your instance.
        public let userSummaryList: [UserSummary]?

        public init(nextToken: String? = nil, userSummaryList: [UserSummary]? = nil) {
            self.nextToken = nextToken
            self.userSummaryList = userSummaryList
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "NextToken"
            case userSummaryList = "UserSummaryList"
        }
    }

    public struct ListRoutingProfilesRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", location: .querystring(locationName: "nextToken"), required: false, type: .string), 
            AWSShapeMember(label: "MaxResults", location: .querystring(locationName: "maxResults"), required: false, type: .integer), 
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        public let nextToken: String?
        /// The maximum number of routing profiles to return in the response.
        public let maxResults: Int32?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(nextToken: String? = nil, maxResults: Int32? = nil, instanceId: String) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "nextToken"
            case maxResults = "maxResults"
            case instanceId = "InstanceId"
        }
    }

    public struct UpdateUserSecurityProfilesRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string), 
            AWSShapeMember(label: "SecurityProfileIds", required: true, type: .list)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The identifier of the user account to assign the security profiles.
        public let userId: String
        /// The identifiers for the security profiles to assign to the user.
        public let securityProfileIds: [String]

        public init(instanceId: String, userId: String, securityProfileIds: [String]) {
            self.instanceId = instanceId
            self.userId = userId
            self.securityProfileIds = securityProfileIds
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case userId = "UserId"
            case securityProfileIds = "SecurityProfileIds"
        }
    }

    public struct GetFederationTokenResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Credentials", required: false, type: .structure)
        ]
        /// The credentials to use for federation.
        public let credentials: Credentials?

        public init(credentials: Credentials? = nil) {
            self.credentials = credentials
        }

        private enum CodingKeys: String, CodingKey {
            case credentials = "Credentials"
        }
    }

    public struct HierarchyGroup: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Name", required: false, type: .string), 
            AWSShapeMember(label: "HierarchyPath", required: false, type: .structure), 
            AWSShapeMember(label: "LevelId", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Id", required: false, type: .string)
        ]
        /// The name of the hierarchy group in your instance.
        public let name: String?
        /// A HierarchyPath object that contains information about the levels in the hierarchy group.
        public let hierarchyPath: HierarchyPath?
        /// The identifier for the level in the hierarchy group.
        public let levelId: String?
        /// The Amazon Resource Name (ARN) for the hierarchy group.
        public let arn: String?
        /// The identifier for the hierarchy group.
        public let id: String?

        public init(name: String? = nil, hierarchyPath: HierarchyPath? = nil, levelId: String? = nil, arn: String? = nil, id: String? = nil) {
            self.name = name
            self.hierarchyPath = hierarchyPath
            self.levelId = levelId
            self.arn = arn
            self.id = id
        }

        private enum CodingKeys: String, CodingKey {
            case name = "Name"
            case hierarchyPath = "HierarchyPath"
            case levelId = "LevelId"
            case arn = "Arn"
            case id = "Id"
        }
    }

    public struct UserPhoneConfig: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "DeskPhoneNumber", required: false, type: .string), 
            AWSShapeMember(label: "PhoneType", required: true, type: .enum), 
            AWSShapeMember(label: "AfterContactWorkTimeLimit", required: false, type: .integer), 
            AWSShapeMember(label: "AutoAccept", required: false, type: .boolean)
        ]
        /// The phone number for the user's desk phone.
        public let deskPhoneNumber: String?
        /// The phone type selected for the user, either Soft phone or Desk phone.
        public let phoneType: PhoneType
        /// The After Call Work (ACW) timeout setting, in seconds, for the user.
        public let afterContactWorkTimeLimit: Int32?
        /// The Auto accept setting for the user, Yes or No.
        public let autoAccept: Bool?

        public init(deskPhoneNumber: String? = nil, phoneType: PhoneType, afterContactWorkTimeLimit: Int32? = nil, autoAccept: Bool? = nil) {
            self.deskPhoneNumber = deskPhoneNumber
            self.phoneType = phoneType
            self.afterContactWorkTimeLimit = afterContactWorkTimeLimit
            self.autoAccept = autoAccept
        }

        private enum CodingKeys: String, CodingKey {
            case deskPhoneNumber = "DeskPhoneNumber"
            case phoneType = "PhoneType"
            case afterContactWorkTimeLimit = "AfterContactWorkTimeLimit"
            case autoAccept = "AutoAccept"
        }
    }

    public struct ListSecurityProfilesRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", location: .querystring(locationName: "nextToken"), required: false, type: .string), 
            AWSShapeMember(label: "MaxResults", location: .querystring(locationName: "maxResults"), required: false, type: .integer), 
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        public let nextToken: String?
        /// The maximum number of security profiles to return.
        public let maxResults: Int32?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(nextToken: String? = nil, maxResults: Int32? = nil, instanceId: String) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "nextToken"
            case maxResults = "maxResults"
            case instanceId = "InstanceId"
        }
    }

    public struct ListUsersRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", location: .querystring(locationName: "nextToken"), required: false, type: .string), 
            AWSShapeMember(label: "MaxResults", location: .querystring(locationName: "maxResults"), required: false, type: .integer), 
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        public let nextToken: String?
        /// The maximum number of results to return in the response.
        public let maxResults: Int32?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(nextToken: String? = nil, maxResults: Int32? = nil, instanceId: String) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "nextToken"
            case maxResults = "maxResults"
            case instanceId = "InstanceId"
        }
    }

    public struct DeleteUserRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The unique identifier of the user to delete.
        public let userId: String

        public init(instanceId: String, userId: String) {
            self.instanceId = instanceId
            self.userId = userId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case userId = "UserId"
        }
    }

    public struct StartOutboundVoiceContactRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "DestinationPhoneNumber", required: true, type: .string), 
            AWSShapeMember(label: "Attributes", required: false, type: .map), 
            AWSShapeMember(label: "QueueId", required: false, type: .string), 
            AWSShapeMember(label: "ClientToken", required: false, type: .string), 
            AWSShapeMember(label: "InstanceId", required: true, type: .string), 
            AWSShapeMember(label: "SourcePhoneNumber", required: false, type: .string), 
            AWSShapeMember(label: "ContactFlowId", required: true, type: .string)
        ]
        /// The phone number of the customer in E.164 format.
        public let destinationPhoneNumber: String
        /// Specify a custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes. There can be up to 32,768 UTF-8 bytes across all key-value pairs. Attribute keys can include only alphanumeric, dash, and underscore characters. For example, if you want play a greeting when the customer answers the call, you can pass the customer name in attributes similar to the following:
        public let attributes: [String: String]?
        /// The queue to add the call to. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue used will be the queue defined in the contact flow. To find the QueueId, open the queue you want to use in the Amazon Connect Queue editor. The ID for the queue is displayed in the address bar as part of the URL. For example, the queue ID is the set of characters at the end of the URL, after 'queue/' such as queue/aeg40574-2d01-51c3-73d6-bf8624d2168c.
        public let queueId: String?
        /// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. If the contact is disconnected, a new contact is started.
        public let clientToken: String?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The phone number, in E.164 format, associated with your Amazon Connect instance to use for the outbound call.
        public let sourcePhoneNumber: String?
        /// The identifier for the contact flow to connect the outbound call to. To find the ContactFlowId, open the contact flow you want to use in the Amazon Connect contact flow editor. The ID for the contact flow is displayed in the address bar as part of the URL. For example, the contact flow ID is the set of characters at the end of the URL, after 'contact-flow/' such as 78ea8fd5-2659-4f2b-b528-699760ccfc1b.
        public let contactFlowId: String

        public init(destinationPhoneNumber: String, attributes: [String: String]? = nil, queueId: String? = nil, clientToken: String? = nil, instanceId: String, sourcePhoneNumber: String? = nil, contactFlowId: String) {
            self.destinationPhoneNumber = destinationPhoneNumber
            self.attributes = attributes
            self.queueId = queueId
            self.clientToken = clientToken
            self.instanceId = instanceId
            self.sourcePhoneNumber = sourcePhoneNumber
            self.contactFlowId = contactFlowId
        }

        private enum CodingKeys: String, CodingKey {
            case destinationPhoneNumber = "DestinationPhoneNumber"
            case attributes = "Attributes"
            case queueId = "QueueId"
            case clientToken = "ClientToken"
            case instanceId = "InstanceId"
            case sourcePhoneNumber = "SourcePhoneNumber"
            case contactFlowId = "ContactFlowId"
        }
    }

    public struct ListRoutingProfilesResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "RoutingProfileSummaryList", required: false, type: .list)
        ]
        /// A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.
        public let nextToken: String?
        /// An array of RoutingProfileSummary objects that include the ARN, Id, and Name of the routing profile.
        public let routingProfileSummaryList: [RoutingProfileSummary]?

        public init(nextToken: String? = nil, routingProfileSummaryList: [RoutingProfileSummary]? = nil) {
            self.nextToken = nextToken
            self.routingProfileSummaryList = routingProfileSummaryList
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "NextToken"
            case routingProfileSummaryList = "RoutingProfileSummaryList"
        }
    }

    public struct SecurityProfileSummary: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Name", required: false, type: .string)
        ]
        /// The identifier of the security profile.
        public let id: String?
        /// The ARN of the security profile.
        public let arn: String?
        /// The name of the security profile.
        public let name: String?

        public init(id: String? = nil, arn: String? = nil, name: String? = nil) {
            self.id = id
            self.arn = arn
            self.name = name
        }

        private enum CodingKeys: String, CodingKey {
            case id = "Id"
            case arn = "Arn"
            case name = "Name"
        }
    }

    public struct DescribeUserHierarchyStructureRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(instanceId: String) {
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
        }
    }

    public struct CreateUserResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "UserId", required: false, type: .string), 
            AWSShapeMember(label: "UserArn", required: false, type: .string)
        ]
        /// The unique identifier for the user account in Amazon Connect
        public let userId: String?
        /// The Amazon Resource Name (ARN) of the user account created.
        public let userArn: String?

        public init(userId: String? = nil, userArn: String? = nil) {
            self.userId = userId
            self.userArn = userArn
        }

        private enum CodingKeys: String, CodingKey {
            case userId = "UserId"
            case userArn = "UserArn"
        }
    }

    public struct UpdateUserPhoneConfigRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "PhoneConfig", required: true, type: .structure), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// A UserPhoneConfig object that contains settings for AfterContactWorkTimeLimit, AutoAccept, DeskPhoneNumber, and PhoneType to assign to the user.
        public let phoneConfig: UserPhoneConfig
        /// The identifier for the user account to change phone settings for.
        public let userId: String

        public init(instanceId: String, phoneConfig: UserPhoneConfig, userId: String) {
            self.instanceId = instanceId
            self.phoneConfig = phoneConfig
            self.userId = userId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case phoneConfig = "PhoneConfig"
            case userId = "UserId"
        }
    }

    public struct UpdateUserIdentityInfoRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "IdentityInfo", required: true, type: .structure), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// A UserIdentityInfo object.
        public let identityInfo: UserIdentityInfo
        /// The identifier for the user account to update identity information for.
        public let userId: String

        public init(instanceId: String, identityInfo: UserIdentityInfo, userId: String) {
            self.instanceId = instanceId
            self.identityInfo = identityInfo
            self.userId = userId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case identityInfo = "IdentityInfo"
            case userId = "UserId"
        }
    }

    public struct DescribeUserHierarchyGroupResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "HierarchyGroup", required: false, type: .structure)
        ]
        /// Returns a HierarchyGroup object.
        public let hierarchyGroup: HierarchyGroup?

        public init(hierarchyGroup: HierarchyGroup? = nil) {
            self.hierarchyGroup = hierarchyGroup
        }

        private enum CodingKeys: String, CodingKey {
            case hierarchyGroup = "HierarchyGroup"
        }
    }

    public struct RoutingProfileSummary: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Name", required: false, type: .string)
        ]
        /// The identifier of the routing profile.
        public let id: String?
        /// The ARN of the routing profile.
        public let arn: String?
        /// The name of the routing profile.
        public let name: String?

        public init(id: String? = nil, arn: String? = nil, name: String? = nil) {
            self.id = id
            self.arn = arn
            self.name = name
        }

        private enum CodingKeys: String, CodingKey {
            case id = "Id"
            case arn = "Arn"
            case name = "Name"
        }
    }

    public struct ListSecurityProfilesResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", required: false, type: .string), 
            AWSShapeMember(label: "SecurityProfileSummaryList", required: false, type: .list)
        ]
        /// A string returned in the response. Use the value returned in the response as the value of the NextToken in a subsequent request to retrieve the next set of results.
        public let nextToken: String?
        /// An array of SecurityProfileSummary objects.
        public let securityProfileSummaryList: [SecurityProfileSummary]?

        public init(nextToken: String? = nil, securityProfileSummaryList: [SecurityProfileSummary]? = nil) {
            self.nextToken = nextToken
            self.securityProfileSummaryList = securityProfileSummaryList
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "NextToken"
            case securityProfileSummaryList = "SecurityProfileSummaryList"
        }
    }

    public struct DescribeUserResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "User", required: false, type: .structure)
        ]
        /// A User object that contains information about the user account and configuration settings.
        public let user: User?

        public init(user: User? = nil) {
            self.user = user
        }

        private enum CodingKeys: String, CodingKey {
            case user = "User"
        }
    }

    public struct ListUserHierarchyGroupsRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "NextToken", location: .querystring(locationName: "nextToken"), required: false, type: .string), 
            AWSShapeMember(label: "MaxResults", location: .querystring(locationName: "maxResults"), required: false, type: .integer), 
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string)
        ]
        /// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        public let nextToken: String?
        /// The maximum number of hierarchy groups to return.
        public let maxResults: Int32?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String

        public init(nextToken: String? = nil, maxResults: Int32? = nil, instanceId: String) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.instanceId = instanceId
        }

        private enum CodingKeys: String, CodingKey {
            case nextToken = "nextToken"
            case maxResults = "maxResults"
            case instanceId = "InstanceId"
        }
    }

    public struct Credentials: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "RefreshToken", required: false, type: .string), 
            AWSShapeMember(label: "AccessToken", required: false, type: .string), 
            AWSShapeMember(label: "AccessTokenExpiration", required: false, type: .timestamp), 
            AWSShapeMember(label: "RefreshTokenExpiration", required: false, type: .timestamp)
        ]
        /// Renews a token generated for a user to access the Amazon Connect instance.
        public let refreshToken: String?
        /// An access token generated for a federated user to access Amazon Connect
        public let accessToken: String?
        /// A token generated with an expiration time for the session a user is logged in to Amazon Connect
        public let accessTokenExpiration: TimeStamp?
        /// Renews the expiration timer for a generated token.
        public let refreshTokenExpiration: TimeStamp?

        public init(refreshToken: String? = nil, accessToken: String? = nil, accessTokenExpiration: TimeStamp? = nil, refreshTokenExpiration: TimeStamp? = nil) {
            self.refreshToken = refreshToken
            self.accessToken = accessToken
            self.accessTokenExpiration = accessTokenExpiration
            self.refreshTokenExpiration = refreshTokenExpiration
        }

        private enum CodingKeys: String, CodingKey {
            case refreshToken = "RefreshToken"
            case accessToken = "AccessToken"
            case accessTokenExpiration = "AccessTokenExpiration"
            case refreshTokenExpiration = "RefreshTokenExpiration"
        }
    }

    public struct DescribeUserRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// Unique identifier for the user account to return.
        public let userId: String

        public init(instanceId: String, userId: String) {
            self.instanceId = instanceId
            self.userId = userId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case userId = "UserId"
        }
    }

    public struct DescribeUserHierarchyStructureResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "HierarchyStructure", required: false, type: .structure)
        ]
        /// A HierarchyStructure object.
        public let hierarchyStructure: HierarchyStructure?

        public init(hierarchyStructure: HierarchyStructure? = nil) {
            self.hierarchyStructure = hierarchyStructure
        }

        private enum CodingKeys: String, CodingKey {
            case hierarchyStructure = "HierarchyStructure"
        }
    }

    public struct UpdateUserHierarchyRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string), 
            AWSShapeMember(label: "HierarchyGroupId", required: false, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The identifier of the user account to assign the hierarchy group to.
        public let userId: String
        /// The identifier for the hierarchy group to assign to the user.
        public let hierarchyGroupId: String?

        public init(instanceId: String, userId: String, hierarchyGroupId: String? = nil) {
            self.instanceId = instanceId
            self.userId = userId
            self.hierarchyGroupId = hierarchyGroupId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case userId = "UserId"
            case hierarchyGroupId = "HierarchyGroupId"
        }
    }

    public struct HierarchyStructure: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "LevelFour", required: false, type: .structure), 
            AWSShapeMember(label: "LevelOne", required: false, type: .structure), 
            AWSShapeMember(label: "LevelTwo", required: false, type: .structure), 
            AWSShapeMember(label: "LevelThree", required: false, type: .structure), 
            AWSShapeMember(label: "LevelFive", required: false, type: .structure)
        ]
        /// A HierarchyLevel object that contains information about the hierarchy group level.
        public let levelFour: HierarchyLevel?
        /// A HierarchyLevel object that contains information about the hierarchy group level.
        public let levelOne: HierarchyLevel?
        /// A HierarchyLevel object that contains information about the hierarchy group level.
        public let levelTwo: HierarchyLevel?
        /// A HierarchyLevel object that contains information about the hierarchy group level.
        public let levelThree: HierarchyLevel?
        /// A HierarchyLevel object that contains information about the hierarchy group level.
        public let levelFive: HierarchyLevel?

        public init(levelFour: HierarchyLevel? = nil, levelOne: HierarchyLevel? = nil, levelTwo: HierarchyLevel? = nil, levelThree: HierarchyLevel? = nil, levelFive: HierarchyLevel? = nil) {
            self.levelFour = levelFour
            self.levelOne = levelOne
            self.levelTwo = levelTwo
            self.levelThree = levelThree
            self.levelFive = levelFive
        }

        private enum CodingKeys: String, CodingKey {
            case levelFour = "LevelFour"
            case levelOne = "LevelOne"
            case levelTwo = "LevelTwo"
            case levelThree = "LevelThree"
            case levelFive = "LevelFive"
        }
    }

    public struct CreateUserRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Username", required: true, type: .string), 
            AWSShapeMember(label: "IdentityInfo", required: false, type: .structure), 
            AWSShapeMember(label: "PhoneConfig", required: true, type: .structure), 
            AWSShapeMember(label: "SecurityProfileIds", required: true, type: .list), 
            AWSShapeMember(label: "DirectoryUserId", required: false, type: .string), 
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "Password", required: false, type: .string), 
            AWSShapeMember(label: "HierarchyGroupId", required: false, type: .string), 
            AWSShapeMember(label: "RoutingProfileId", required: true, type: .string)
        ]
        /// The user name in Amazon Connect for the user to create.
        public let username: String
        /// Information about the user, including email address, first name, and last name.
        public let identityInfo: UserIdentityInfo?
        /// Specifies the phone settings for the user, including AfterContactWorkTimeLimit, AutoAccept, DeskPhoneNumber, and PhoneType.
        public let phoneConfig: UserPhoneConfig
        /// The unique identifier of the security profile to assign to the user created.
        public let securityProfileIds: [String]
        /// The unique identifier for the user account in the directory service directory used for identity management. If Amazon Connect is unable to access the existing directory, you can use the DirectoryUserId to authenticate users. If you include the parameter, it is assumed that Amazon Connect cannot access the directory. If the parameter is not included, the UserIdentityInfo is used to authenticate users from your existing directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an InvalidRequestException is returned.
        public let directoryUserId: String?
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The password for the user account to create. This is required if you are using Amazon Connect for identity management. If you are using SAML for identity management and include this parameter, an InvalidRequestException is returned.
        public let password: String?
        /// The unique identifier for the hierarchy group to assign to the user created.
        public let hierarchyGroupId: String?
        /// The unique identifier for the routing profile to assign to the user created.
        public let routingProfileId: String

        public init(username: String, identityInfo: UserIdentityInfo? = nil, phoneConfig: UserPhoneConfig, securityProfileIds: [String], directoryUserId: String? = nil, instanceId: String, password: String? = nil, hierarchyGroupId: String? = nil, routingProfileId: String) {
            self.username = username
            self.identityInfo = identityInfo
            self.phoneConfig = phoneConfig
            self.securityProfileIds = securityProfileIds
            self.directoryUserId = directoryUserId
            self.instanceId = instanceId
            self.password = password
            self.hierarchyGroupId = hierarchyGroupId
            self.routingProfileId = routingProfileId
        }

        private enum CodingKeys: String, CodingKey {
            case username = "Username"
            case identityInfo = "IdentityInfo"
            case phoneConfig = "PhoneConfig"
            case securityProfileIds = "SecurityProfileIds"
            case directoryUserId = "DirectoryUserId"
            case instanceId = "InstanceId"
            case password = "Password"
            case hierarchyGroupId = "HierarchyGroupId"
            case routingProfileId = "RoutingProfileId"
        }
    }

    public struct UserIdentityInfo: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "FirstName", required: false, type: .string), 
            AWSShapeMember(label: "LastName", required: false, type: .string), 
            AWSShapeMember(label: "Email", required: false, type: .string)
        ]
        /// The first name used in the user account. This is required if you are using Amazon Connect or SAML for identity management.
        public let firstName: String?
        /// The last name used in the user account. This is required if you are using Amazon Connect or SAML for identity management.
        public let lastName: String?
        /// The email address added to the user account. If you are using SAML for identity management and include this parameter, an InvalidRequestException is returned.
        public let email: String?

        public init(firstName: String? = nil, lastName: String? = nil, email: String? = nil) {
            self.firstName = firstName
            self.lastName = lastName
            self.email = email
        }

        private enum CodingKeys: String, CodingKey {
            case firstName = "FirstName"
            case lastName = "LastName"
            case email = "Email"
        }
    }

    public struct DescribeUserHierarchyGroupRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "HierarchyGroupId", location: .uri(locationName: "HierarchyGroupId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The identifier for the hierarchy group to return.
        public let hierarchyGroupId: String

        public init(instanceId: String, hierarchyGroupId: String) {
            self.instanceId = instanceId
            self.hierarchyGroupId = hierarchyGroupId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case hierarchyGroupId = "HierarchyGroupId"
        }
    }

    public struct HierarchyPath: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "LevelFour", required: false, type: .structure), 
            AWSShapeMember(label: "LevelOne", required: false, type: .structure), 
            AWSShapeMember(label: "LevelTwo", required: false, type: .structure), 
            AWSShapeMember(label: "LevelThree", required: false, type: .structure), 
            AWSShapeMember(label: "LevelFive", required: false, type: .structure)
        ]
        /// A HierarchyGroupSummary object that contains information about the level of the hierarchy group, including ARN, Id, and Name.
        public let levelFour: HierarchyGroupSummary?
        /// A HierarchyGroupSummary object that contains information about the level of the hierarchy group, including ARN, Id, and Name.
        public let levelOne: HierarchyGroupSummary?
        /// A HierarchyGroupSummary object that contains information about the level of the hierarchy group, including ARN, Id, and Name.
        public let levelTwo: HierarchyGroupSummary?
        /// A HierarchyGroupSummary object that contains information about the level of the hierarchy group, including ARN, Id, and Name.
        public let levelThree: HierarchyGroupSummary?
        /// A HierarchyGroupSummary object that contains information about the level of the hierarchy group, including ARN, Id, and Name.
        public let levelFive: HierarchyGroupSummary?

        public init(levelFour: HierarchyGroupSummary? = nil, levelOne: HierarchyGroupSummary? = nil, levelTwo: HierarchyGroupSummary? = nil, levelThree: HierarchyGroupSummary? = nil, levelFive: HierarchyGroupSummary? = nil) {
            self.levelFour = levelFour
            self.levelOne = levelOne
            self.levelTwo = levelTwo
            self.levelThree = levelThree
            self.levelFive = levelFive
        }

        private enum CodingKeys: String, CodingKey {
            case levelFour = "LevelFour"
            case levelOne = "LevelOne"
            case levelTwo = "LevelTwo"
            case levelThree = "LevelThree"
            case levelFive = "LevelFive"
        }
    }

    public struct StopContactRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", required: true, type: .string), 
            AWSShapeMember(label: "ContactId", required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The unique identifier of the contact to end.
        public let contactId: String

        public init(instanceId: String, contactId: String) {
            self.instanceId = instanceId
            self.contactId = contactId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case contactId = "ContactId"
        }
    }

    public struct UserSummary: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Id", required: false, type: .string), 
            AWSShapeMember(label: "Arn", required: false, type: .string), 
            AWSShapeMember(label: "Username", required: false, type: .string)
        ]
        /// The identifier for the user account.
        public let id: String?
        /// The ARN for the user account.
        public let arn: String?
        /// The Amazon Connect user name for the user account.
        public let username: String?

        public init(id: String? = nil, arn: String? = nil, username: String? = nil) {
            self.id = id
            self.arn = arn
            self.username = username
        }

        private enum CodingKeys: String, CodingKey {
            case id = "Id"
            case arn = "Arn"
            case username = "Username"
        }
    }

    public struct StartOutboundVoiceContactResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "ContactId", required: false, type: .string)
        ]
        /// The unique identifier of this contact within your Amazon Connect instance.
        public let contactId: String?

        public init(contactId: String? = nil) {
            self.contactId = contactId
        }

        private enum CodingKeys: String, CodingKey {
            case contactId = "ContactId"
        }
    }

    public struct StopContactResponse: AWSShape {

    }

    public struct UpdateUserRoutingProfileRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "InstanceId", location: .uri(locationName: "InstanceId"), required: true, type: .string), 
            AWSShapeMember(label: "RoutingProfileId", required: true, type: .string), 
            AWSShapeMember(label: "UserId", location: .uri(locationName: "UserId"), required: true, type: .string)
        ]
        /// The identifier for your Amazon Connect instance. To find the ID of your instance, open the AWS console and select Amazon Connect. Select the alias of the instance in the Instance alias column. The instance ID is displayed in the Overview section of your instance settings. For example, the instance ID is the set of characters at the end of the instance ARN, after instance/, such as 10a4c4eb-f57e-4d4c-b602-bf39176ced07.
        public let instanceId: String
        /// The identifier of the routing profile to assign to the user.
        public let routingProfileId: String
        /// The identifier for the user account to assign the routing profile to.
        public let userId: String

        public init(instanceId: String, routingProfileId: String, userId: String) {
            self.instanceId = instanceId
            self.routingProfileId = routingProfileId
            self.userId = userId
        }

        private enum CodingKeys: String, CodingKey {
            case instanceId = "InstanceId"
            case routingProfileId = "RoutingProfileId"
            case userId = "UserId"
        }
    }

}