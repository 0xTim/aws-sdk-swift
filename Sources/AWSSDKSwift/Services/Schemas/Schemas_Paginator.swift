// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension Schemas {

    ///  List the discoverers.
    public func listDiscoverersPaginator(_ input: ListDiscoverersRequest) -> EventLoopFuture<[DiscovererSummary]> {
        return client.paginate(input: input, command: listDiscoverers, resultKey: \ListDiscoverersResponse.discoverers, tokenKey: \ListDiscoverersResponse.nextToken)
    }
    
    ///  List the registries.
    public func listRegistriesPaginator(_ input: ListRegistriesRequest) -> EventLoopFuture<[RegistrySummary]> {
        return client.paginate(input: input, command: listRegistries, resultKey: \ListRegistriesResponse.registries, tokenKey: \ListRegistriesResponse.nextToken)
    }
    
    ///  Provides a list of the schema versions and related information.
    public func listSchemaVersionsPaginator(_ input: ListSchemaVersionsRequest) -> EventLoopFuture<[SchemaVersionSummary]> {
        return client.paginate(input: input, command: listSchemaVersions, resultKey: \ListSchemaVersionsResponse.schemaVersions, tokenKey: \ListSchemaVersionsResponse.nextToken)
    }
    
    ///  List the schemas.
    public func listSchemasPaginator(_ input: ListSchemasRequest) -> EventLoopFuture<[SchemaSummary]> {
        return client.paginate(input: input, command: listSchemas, resultKey: \ListSchemasResponse.schemas, tokenKey: \ListSchemasResponse.nextToken)
    }
    
    ///  Search the schemas
    public func searchSchemasPaginator(_ input: SearchSchemasRequest) -> EventLoopFuture<[SearchSchemaSummary]> {
        return client.paginate(input: input, command: searchSchemas, resultKey: \SearchSchemasResponse.schemas, tokenKey: \SearchSchemasResponse.nextToken)
    }
    
}

extension Schemas.ListDiscoverersRequest: AWSPaginateStringToken {
    public init(_ original: Schemas.ListDiscoverersRequest, token: String) {
        self.init(
            discovererIdPrefix: original.discovererIdPrefix, 
            limit: original.limit, 
            nextToken: token, 
            sourceArnPrefix: original.sourceArnPrefix
        )
    }
}

extension Schemas.ListRegistriesRequest: AWSPaginateStringToken {
    public init(_ original: Schemas.ListRegistriesRequest, token: String) {
        self.init(
            limit: original.limit, 
            nextToken: token, 
            registryNamePrefix: original.registryNamePrefix, 
            scope: original.scope
        )
    }
}

extension Schemas.ListSchemaVersionsRequest: AWSPaginateStringToken {
    public init(_ original: Schemas.ListSchemaVersionsRequest, token: String) {
        self.init(
            limit: original.limit, 
            nextToken: token, 
            registryName: original.registryName, 
            schemaName: original.schemaName
        )
    }
}

extension Schemas.ListSchemasRequest: AWSPaginateStringToken {
    public init(_ original: Schemas.ListSchemasRequest, token: String) {
        self.init(
            limit: original.limit, 
            nextToken: token, 
            registryName: original.registryName, 
            schemaNamePrefix: original.schemaNamePrefix
        )
    }
}

extension Schemas.SearchSchemasRequest: AWSPaginateStringToken {
    public init(_ original: Schemas.SearchSchemasRequest, token: String) {
        self.init(
            keywords: original.keywords, 
            limit: original.limit, 
            nextToken: token, 
            registryName: original.registryName
        )
    }
}


