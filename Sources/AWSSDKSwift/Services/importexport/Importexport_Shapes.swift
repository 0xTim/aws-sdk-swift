// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
/**
The MIT License (MIT)

Copyright (c) 2017 Yuki Takei(noppoMan)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

import Foundation
import Core

extension Importexport {

    public struct ListJobsInput: Serializable, Initializable {
        var marker: String? = nil
        var maxJobs: Int32? = nil
        var aPIVersion: String? = nil

        public init() {}

        public init(marker: String? = nil, maxJobs: Int32? = nil, aPIVersion: String? = nil) {
            self.marker = marker
            self.maxJobs = maxJobs
            self.aPIVersion = aPIVersion
        }

    }

    public struct CreateJobInput: Serializable, Initializable {
        var jobType: String = ""
        var validateOnly: Bool = false
        var manifest: String = ""
        var aPIVersion: String? = nil
        var manifestAddendum: String? = nil

        public init() {}

        public init(jobType: String, validateOnly: Bool, manifest: String, aPIVersion: String? = nil, manifestAddendum: String? = nil) {
            self.jobType = jobType
            self.validateOnly = validateOnly
            self.manifest = manifest
            self.aPIVersion = aPIVersion
            self.manifestAddendum = manifestAddendum
        }

    }

    public struct GetShippingLabelInput: Serializable, Initializable {
        var stateOrProvince: String? = nil
        var city: String? = nil
        var postalCode: String? = nil
        var name: String? = nil
        var phoneNumber: String? = nil
        var street3: String? = nil
        var jobIds: [String] = []
        var aPIVersion: String? = nil
        var street2: String? = nil
        var street1: String? = nil
        var company: String? = nil
        var country: String? = nil

        public init() {}

        public init(stateOrProvince: String? = nil, city: String? = nil, postalCode: String? = nil, name: String? = nil, phoneNumber: String? = nil, street3: String? = nil, jobIds: [String], aPIVersion: String? = nil, street2: String? = nil, street1: String? = nil, company: String? = nil, country: String? = nil) {
            self.stateOrProvince = stateOrProvince
            self.city = city
            self.postalCode = postalCode
            self.name = name
            self.phoneNumber = phoneNumber
            self.street3 = street3
            self.jobIds = jobIds
            self.aPIVersion = aPIVersion
            self.street2 = street2
            self.street1 = street1
            self.company = company
            self.country = country
        }

    }

    public struct GetStatusInput: Serializable, Initializable {
        var jobId: String = ""
        var aPIVersion: String? = nil

        public init() {}

        public init(jobId: String, aPIVersion: String? = nil) {
            self.jobId = jobId
            self.aPIVersion = aPIVersion
        }

    }

    public struct CreateJobOutput: Serializable, Initializable {
        var jobType: String? = nil
        var artifactList: [Artifact]? = nil
        var signatureFileContents: String? = nil
        var warningMessage: String? = nil
        var signature: String? = nil
        var jobId: String? = nil

        public init() {}

        public init(jobType: String? = nil, artifactList: [Artifact]? = nil, signatureFileContents: String? = nil, warningMessage: String? = nil, signature: String? = nil, jobId: String? = nil) {
            self.jobType = jobType
            self.artifactList = artifactList
            self.signatureFileContents = signatureFileContents
            self.warningMessage = warningMessage
            self.signature = signature
            self.jobId = jobId
        }

    }

    public struct GetShippingLabelOutput: Serializable, Initializable {
        var warning: String? = nil
        var shippingLabelURL: String? = nil

        public init() {}

        public init(warning: String? = nil, shippingLabelURL: String? = nil) {
            self.warning = warning
            self.shippingLabelURL = shippingLabelURL
        }

    }

    public struct UpdateJobOutput: Serializable, Initializable {
        var success: Bool? = nil
        var warningMessage: String? = nil
        var artifactList: [Artifact]? = nil

        public init() {}

        public init(success: Bool? = nil, warningMessage: String? = nil, artifactList: [Artifact]? = nil) {
            self.success = success
            self.warningMessage = warningMessage
            self.artifactList = artifactList
        }

    }

    public struct UpdateJobInput: Serializable, Initializable {
        var jobType: String = ""
        var aPIVersion: String? = nil
        var manifest: String = ""
        var jobId: String = ""
        var validateOnly: Bool = false

        public init() {}

        public init(jobType: String, aPIVersion: String? = nil, manifest: String, jobId: String, validateOnly: Bool) {
            self.jobType = jobType
            self.aPIVersion = aPIVersion
            self.manifest = manifest
            self.jobId = jobId
            self.validateOnly = validateOnly
        }

    }

    public struct Job: Serializable, Initializable {
        var jobType: String? = nil
        var creationDate: Date? = nil
        var jobId: String? = nil
        var isCanceled: Bool? = nil

        public init() {}

        public init(jobType: String? = nil, creationDate: Date? = nil, jobId: String? = nil, isCanceled: Bool? = nil) {
            self.jobType = jobType
            self.creationDate = creationDate
            self.jobId = jobId
            self.isCanceled = isCanceled
        }

    }

    public struct GetStatusOutput: Serializable, Initializable {
        var carrier: String? = nil
        var artifactList: [Artifact]? = nil
        var signature: String? = nil
        var progressMessage: String? = nil
        var creationDate: Date? = nil
        var currentManifest: String? = nil
        var trackingNumber: String? = nil
        var progressCode: String? = nil
        var jobId: String? = nil
        var logKey: String? = nil
        var signatureFileContents: String? = nil
        var locationMessage: String? = nil
        var jobType: String? = nil
        var errorCount: Int32? = nil
        var logBucket: String? = nil
        var locationCode: String? = nil

        public init() {}

        public init(carrier: String? = nil, artifactList: [Artifact]? = nil, signature: String? = nil, progressMessage: String? = nil, creationDate: Date? = nil, currentManifest: String? = nil, trackingNumber: String? = nil, progressCode: String? = nil, jobId: String? = nil, logKey: String? = nil, signatureFileContents: String? = nil, locationMessage: String? = nil, jobType: String? = nil, errorCount: Int32? = nil, logBucket: String? = nil, locationCode: String? = nil) {
            self.carrier = carrier
            self.artifactList = artifactList
            self.signature = signature
            self.progressMessage = progressMessage
            self.creationDate = creationDate
            self.currentManifest = currentManifest
            self.trackingNumber = trackingNumber
            self.progressCode = progressCode
            self.jobId = jobId
            self.logKey = logKey
            self.signatureFileContents = signatureFileContents
            self.locationMessage = locationMessage
            self.jobType = jobType
            self.errorCount = errorCount
            self.logBucket = logBucket
            self.locationCode = locationCode
        }

    }

    public struct ListJobsOutput: Serializable, Initializable {
        var jobs: [Job]? = nil
        var isTruncated: Bool? = nil

        public init() {}

        public init(jobs: [Job]? = nil, isTruncated: Bool? = nil) {
            self.jobs = jobs
            self.isTruncated = isTruncated
        }

    }

    public struct Artifact: Serializable, Initializable {
        var uRL: String? = nil
        var description: String? = nil

        public init() {}

        public init(uRL: String? = nil, description: String? = nil) {
            self.uRL = uRL
            self.description = description
        }

    }

    public struct CancelJobInput: Serializable, Initializable {
        var jobId: String = ""
        var aPIVersion: String? = nil

        public init() {}

        public init(jobId: String, aPIVersion: String? = nil) {
            self.jobId = jobId
            self.aPIVersion = aPIVersion
        }

    }

    public struct CancelJobOutput: Serializable, Initializable {
        var success: Bool? = nil

        public init() {}

        public init(success: Bool? = nil) {
            self.success = success
        }

    }

}