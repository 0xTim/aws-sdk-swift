// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import AWSSDKSwiftCore

/// Error enum for Iotanalytics
public enum IotanalyticsError: AWSErrorType {
    case resourceNotFoundException(message: String?)
    case resourceAlreadyExistsException(message: String?)
    case invalidRequestException(message: String?)
    case internalFailureException(message: String?)
    case serviceUnavailableException(message: String?)
    case throttlingException(message: String?)
    case limitExceededException(message: String?)
}

extension IotanalyticsError {
    public init?(errorCode: String, message: String?){
        var errorCode = errorCode
        if let index = errorCode.index(of: "#") {
            errorCode = String(errorCode[errorCode.index(index, offsetBy: 1)...])
        }
        switch errorCode {
        case "ResourceNotFoundException":
            self = .resourceNotFoundException(message: message)
        case "ResourceAlreadyExistsException":
            self = .resourceAlreadyExistsException(message: message)
        case "InvalidRequestException":
            self = .invalidRequestException(message: message)
        case "InternalFailureException":
            self = .internalFailureException(message: message)
        case "ServiceUnavailableException":
            self = .serviceUnavailableException(message: message)
        case "ThrottlingException":
            self = .throttlingException(message: message)
        case "LimitExceededException":
            self = .limitExceededException(message: message)
        default:
            return nil
        }
    }
}