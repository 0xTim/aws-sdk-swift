// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension ECR {

    ///  Returns metadata about the images in a repository, including image size, image tags, and creation date.  Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the docker images command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by DescribeImages. 
    public func describeImagesPaginator(_ input: DescribeImagesRequest, onPage: @escaping (DescribeImagesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeImages, tokenKey: \DescribeImagesResponse.nextToken, onPage: onPage)
    }

    ///  Describes image repositories in a registry.
    public func describeRepositoriesPaginator(_ input: DescribeRepositoriesRequest, onPage: @escaping (DescribeRepositoriesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeRepositories, tokenKey: \DescribeRepositoriesResponse.nextToken, onPage: onPage)
    }

    ///  Retrieves the results of the specified lifecycle policy preview request.
    public func getLifecyclePolicyPreviewPaginator(_ input: GetLifecyclePolicyPreviewRequest, onPage: @escaping (GetLifecyclePolicyPreviewResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getLifecyclePolicyPreview, tokenKey: \GetLifecyclePolicyPreviewResponse.nextToken, onPage: onPage)
    }

    ///  Lists all the image IDs for a given repository. You can filter images based on whether or not they are tagged by setting the tagStatus parameter to TAGGED or UNTAGGED. For example, you can filter your results to return only UNTAGGED images and then pipe that result to a BatchDeleteImage operation to delete them. Or, you can filter your results to return only TAGGED images to list all of the tags in your repository.
    public func listImagesPaginator(_ input: ListImagesRequest, onPage: @escaping (ListImagesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listImages, tokenKey: \ListImagesResponse.nextToken, onPage: onPage)
    }

}

extension ECR.DescribeImagesRequest: AWSPaginateStringToken {
    public init(_ original: ECR.DescribeImagesRequest, token: String) {
        self.init(
            filter: original.filter, 
            imageIds: original.imageIds, 
            maxResults: original.maxResults, 
            nextToken: token, 
            registryId: original.registryId, 
            repositoryName: original.repositoryName
        )
    }
}

extension ECR.DescribeRepositoriesRequest: AWSPaginateStringToken {
    public init(_ original: ECR.DescribeRepositoriesRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            registryId: original.registryId, 
            repositoryNames: original.repositoryNames
        )
    }
}

extension ECR.GetLifecyclePolicyPreviewRequest: AWSPaginateStringToken {
    public init(_ original: ECR.GetLifecyclePolicyPreviewRequest, token: String) {
        self.init(
            filter: original.filter, 
            imageIds: original.imageIds, 
            maxResults: original.maxResults, 
            nextToken: token, 
            registryId: original.registryId, 
            repositoryName: original.repositoryName
        )
    }
}

extension ECR.ListImagesRequest: AWSPaginateStringToken {
    public init(_ original: ECR.ListImagesRequest, token: String) {
        self.init(
            filter: original.filter, 
            maxResults: original.maxResults, 
            nextToken: token, 
            registryId: original.registryId, 
            repositoryName: original.repositoryName
        )
    }
}


