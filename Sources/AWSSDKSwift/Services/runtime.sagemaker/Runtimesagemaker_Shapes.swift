// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension Runtimesagemaker {

    public struct InvokeEndpointInput: AWSShape {
        /// The key for the payload
        public static let payloadPath: String? = "Body"
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "EndpointName", location: .uri(locationName: "EndpointName"), required: true, type: .string), 
            AWSShapeMember(label: "Accept", location: .header(locationName: "Accept"), required: false, type: .string), 
            AWSShapeMember(label: "Body", required: true, type: .blob), 
            AWSShapeMember(label: "ContentType", location: .header(locationName: "Content-Type"), required: false, type: .string)
        ]
        /// The name of the endpoint that you specified when you created the endpoint using the CreateEndpoint API. 
        public let endpointName: String
        /// The desired MIME type of the inference in the response.
        public let accept: String?
        /// Provides input data, in the format specified in the ContentType request header. Amazon SageMaker passes all of the data in the body to the model. 
        public let body: Data
        /// The MIME type of the input data in the request body.
        public let contentType: String?

        public init(endpointName: String, accept: String? = nil, body: Data, contentType: String? = nil) {
            self.endpointName = endpointName
            self.accept = accept
            self.body = body
            self.contentType = contentType
        }

        private enum CodingKeys: String, CodingKey {
            case endpointName = "EndpointName"
            case accept = "Accept"
            case body = "Body"
            case contentType = "Content-Type"
        }
    }

    public struct InvokeEndpointOutput: AWSShape {
        /// The key for the payload
        public static let payloadPath: String? = "Body"
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "Body", required: true, type: .blob), 
            AWSShapeMember(label: "InvokedProductionVariant", location: .header(locationName: "x-Amzn-Invoked-Production-Variant"), required: false, type: .string), 
            AWSShapeMember(label: "ContentType", location: .header(locationName: "Content-Type"), required: false, type: .string)
        ]
        /// Includes the inference provided by the model.
        public let body: Data
        /// Identifies the production variant that was invoked.
        public let invokedProductionVariant: String?
        /// The MIME type of the inference returned in the response body.
        public let contentType: String?

        public init(body: Data, invokedProductionVariant: String? = nil, contentType: String? = nil) {
            self.body = body
            self.invokedProductionVariant = invokedProductionVariant
            self.contentType = contentType
        }

        private enum CodingKeys: String, CodingKey {
            case body = "Body"
            case invokedProductionVariant = "x-Amzn-Invoked-Production-Variant"
            case contentType = "Content-Type"
        }
    }

}