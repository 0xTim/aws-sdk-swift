// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension Marketplacecommerceanalytics {

    public enum DataSetType: String, CustomStringConvertible, Codable {
        case customerSubscriberHourlyMonthlySubscriptions = "customer_subscriber_hourly_monthly_subscriptions"
        case customerSubscriberAnnualSubscriptions = "customer_subscriber_annual_subscriptions"
        case dailyBusinessUsageByInstanceType = "daily_business_usage_by_instance_type"
        case dailyBusinessFees = "daily_business_fees"
        case dailyBusinessFreeTrialConversions = "daily_business_free_trial_conversions"
        case dailyBusinessNewInstances = "daily_business_new_instances"
        case dailyBusinessNewProductSubscribers = "daily_business_new_product_subscribers"
        case dailyBusinessCanceledProductSubscribers = "daily_business_canceled_product_subscribers"
        case monthlyRevenueBillingAndRevenueData = "monthly_revenue_billing_and_revenue_data"
        case monthlyRevenueAnnualSubscriptions = "monthly_revenue_annual_subscriptions"
        case disbursedAmountByProduct = "disbursed_amount_by_product"
        case disbursedAmountByProductWithUncollectedFunds = "disbursed_amount_by_product_with_uncollected_funds"
        case disbursedAmountByInstanceHours = "disbursed_amount_by_instance_hours"
        case disbursedAmountByCustomerGeo = "disbursed_amount_by_customer_geo"
        case disbursedAmountByAgeOfUncollectedFunds = "disbursed_amount_by_age_of_uncollected_funds"
        case disbursedAmountByAgeOfDisbursedFunds = "disbursed_amount_by_age_of_disbursed_funds"
        case customerProfileByIndustry = "customer_profile_by_industry"
        case customerProfileByRevenue = "customer_profile_by_revenue"
        case customerProfileByGeography = "customer_profile_by_geography"
        case salesCompensationBilledRevenue = "sales_compensation_billed_revenue"
        case usSalesAndUseTaxRecords = "us_sales_and_use_tax_records"
        public var description: String { return self.rawValue }
    }

    public enum SupportDataSetType: String, CustomStringConvertible, Codable {
        case customerSupportContactsData = "customer_support_contacts_data"
        case testCustomerSupportContactsData = "test_customer_support_contacts_data"
        public var description: String { return self.rawValue }
    }

    public struct GenerateDataSetRequest: AWSShape {
        public static var members: [AWSShapeMember] = [
            AWSShapeMember(label: "snsTopicArn", required: true, type: .string), 
            AWSShapeMember(label: "dataSetType", required: true, type: .enum), 
            AWSShapeMember(label: "destinationS3Prefix", required: false, type: .string), 
            AWSShapeMember(label: "customerDefinedValues", required: false, type: .map), 
            AWSShapeMember(label: "destinationS3BucketName", required: true, type: .string), 
            AWSShapeMember(label: "roleNameArn", required: true, type: .string), 
            AWSShapeMember(label: "dataSetPublicationDate", required: true, type: .timestamp)
        ]
        /// Amazon Resource Name (ARN) for the SNS Topic that will be notified when the data set has been published or if an error has occurred.
        public let snsTopicArn: String
        /// The desired data set type.   customer_subscriber_hourly_monthly_subscriptions - Available daily by 5:00 PM Pacific Time since 2014-07-21. customer_subscriber_annual_subscriptions - Available daily by 5:00 PM Pacific Time since 2014-07-21. daily_business_usage_by_instance_type - Available daily by 5:00 PM Pacific Time since 2015-01-26. daily_business_fees - Available daily by 5:00 PM Pacific Time since 2015-01-26. daily_business_free_trial_conversions - Available daily by 5:00 PM Pacific Time since 2015-01-26. daily_business_new_instances - Available daily by 5:00 PM Pacific Time since 2015-01-26. daily_business_new_product_subscribers - Available daily by 5:00 PM Pacific Time since 2015-01-26. daily_business_canceled_product_subscribers - Available daily by 5:00 PM Pacific Time since 2015-01-26. monthly_revenue_billing_and_revenue_data - Available monthly on the 4th day of the month by 5:00 PM Pacific Time since 2015-02. monthly_revenue_annual_subscriptions - Available monthly on the 4th day of the month by 5:00 PM Pacific Time since 2015-02. disbursed_amount_by_product - Available every 30 days by 5:00 PM Pacific Time since 2015-01-26. disbursed_amount_by_product_with_uncollected_funds -This data set is only available from 2012-04-19 until 2015-01-25. After 2015-01-25, this data set was split into three data sets: disbursed_amount_by_product, disbursed_amount_by_age_of_uncollected_funds, and disbursed_amount_by_age_of_disbursed_funds.  disbursed_amount_by_instance_hours - Available every 30 days by 5:00 PM Pacific Time since 2012-09-04. disbursed_amount_by_customer_geo - Available every 30 days by 5:00 PM Pacific Time since 2012-04-19. disbursed_amount_by_age_of_uncollected_funds - Available every 30 days by 5:00 PM Pacific Time since 2015-01-26. disbursed_amount_by_age_of_disbursed_funds - Available every 30 days by 5:00 PM Pacific Time since 2015-01-26. customer_profile_by_industry - Available daily by 5:00 PM Pacific Time from 2015-10-01 to 2017-06-29. After 2017-06-29 this data set will no longer be published. customer_profile_by_revenue - Available daily by 5:00 PM Pacific Time from 2015-10-01 to 2017-06-29. After 2017-06-29 this data set will no longer be published. customer_profile_by_geography - Available daily by 5:00 PM Pacific Time from 2015-10-01 to 2017-06-29. After 2017-06-29 this data set will no longer be published. sales_compensation_billed_revenue - Available monthly on the 4th day of the month by 5:00 PM Pacific Time since 2016-12. us_sales_and_use_tax_records - Available monthly on the 15th day of the month by 5:00 PM Pacific Time since 2017-02-15.  
        public let dataSetType: DataSetType
        /// (Optional) The desired S3 prefix for the published data set, similar to a directory path in standard file systems. For example, if given the bucket name "mybucket" and the prefix "myprefix/mydatasets", the output file "outputfile" would be published to "s3://mybucket/myprefix/mydatasets/outputfile". If the prefix directory structure does not exist, it will be created. If no prefix is provided, the data set will be published to the S3 bucket root.
        public let destinationS3Prefix: String?
        /// (Optional) Key-value pairs which will be returned, unmodified, in the Amazon SNS notification message and the data set metadata file. These key-value pairs can be used to correlated responses with tracking information from other systems.
        public let customerDefinedValues: [String: String]?
        /// The name (friendly name, not ARN) of the destination S3 bucket.
        public let destinationS3BucketName: String
        /// The Amazon Resource Name (ARN) of the Role with an attached permissions policy to interact with the provided AWS services.
        public let roleNameArn: String
        /// The date a data set was published. For daily data sets, provide a date with day-level granularity for the desired day. For weekly data sets, provide a date with day-level granularity within the desired week (the day value will be ignored). For monthly data sets, provide a date with month-level granularity for the desired month (the day value will be ignored).
        public let dataSetPublicationDate: TimeStamp

        public init(snsTopicArn: String, dataSetType: DataSetType, destinationS3Prefix: String? = nil, customerDefinedValues: [String: String]? = nil, destinationS3BucketName: String, roleNameArn: String, dataSetPublicationDate: TimeStamp) {
            self.snsTopicArn = snsTopicArn
            self.dataSetType = dataSetType
            self.destinationS3Prefix = destinationS3Prefix
            self.customerDefinedValues = customerDefinedValues
            self.destinationS3BucketName = destinationS3BucketName
            self.roleNameArn = roleNameArn
            self.dataSetPublicationDate = dataSetPublicationDate
        }

        private enum CodingKeys: String, CodingKey {
            case snsTopicArn = "snsTopicArn"
            case dataSetType = "dataSetType"
            case destinationS3Prefix = "destinationS3Prefix"
            case customerDefinedValues = "customerDefinedValues"
            case destinationS3BucketName = "destinationS3BucketName"
            case roleNameArn = "roleNameArn"
            case dataSetPublicationDate = "dataSetPublicationDate"
        }
    }

    public struct StartSupportDataExportResult: AWSShape {
        public static var members: [AWSShapeMember] = [
            AWSShapeMember(label: "dataSetRequestId", required: false, type: .string)
        ]
        /// A unique identifier representing a specific request to the StartSupportDataExport operation. This identifier can be used to correlate a request with notifications from the SNS topic.
        public let dataSetRequestId: String?

        public init(dataSetRequestId: String? = nil) {
            self.dataSetRequestId = dataSetRequestId
        }

        private enum CodingKeys: String, CodingKey {
            case dataSetRequestId = "dataSetRequestId"
        }
    }

    public struct StartSupportDataExportRequest: AWSShape {
        public static var members: [AWSShapeMember] = [
            AWSShapeMember(label: "snsTopicArn", required: true, type: .string), 
            AWSShapeMember(label: "dataSetType", required: true, type: .enum), 
            AWSShapeMember(label: "destinationS3Prefix", required: false, type: .string), 
            AWSShapeMember(label: "customerDefinedValues", required: false, type: .map), 
            AWSShapeMember(label: "destinationS3BucketName", required: true, type: .string), 
            AWSShapeMember(label: "fromDate", required: true, type: .timestamp), 
            AWSShapeMember(label: "roleNameArn", required: true, type: .string)
        ]
        /// Amazon Resource Name (ARN) for the SNS Topic that will be notified when the data set has been published or if an error has occurred.
        public let snsTopicArn: String
        ///  Specifies the data set type to be written to the output csv file. The data set types customer_support_contacts_data and test_customer_support_contacts_data both result in a csv file containing the following fields: Product Id, Product Code, Customer Guid, Subscription Guid, Subscription Start Date, Organization, AWS Account Id, Given Name, Surname, Telephone Number, Email, Title, Country Code, ZIP Code, Operation Type, and Operation Time.    customer_support_contacts_data Customer support contact data. The data set will contain all changes (Creates, Updates, and Deletes) to customer support contact data from the date specified in the from_date parameter. test_customer_support_contacts_data An example data set containing static test data in the same format as customer_support_contacts_data  
        public let dataSetType: SupportDataSetType
        /// (Optional) The desired S3 prefix for the published data set, similar to a directory path in standard file systems. For example, if given the bucket name "mybucket" and the prefix "myprefix/mydatasets", the output file "outputfile" would be published to "s3://mybucket/myprefix/mydatasets/outputfile". If the prefix directory structure does not exist, it will be created. If no prefix is provided, the data set will be published to the S3 bucket root.
        public let destinationS3Prefix: String?
        /// (Optional) Key-value pairs which will be returned, unmodified, in the Amazon SNS notification message and the data set metadata file.
        public let customerDefinedValues: [String: String]?
        /// The name (friendly name, not ARN) of the destination S3 bucket.
        public let destinationS3BucketName: String
        /// The start date from which to retrieve the data set in UTC. This parameter only affects the customer_support_contacts_data data set type.
        public let fromDate: TimeStamp
        /// The Amazon Resource Name (ARN) of the Role with an attached permissions policy to interact with the provided AWS services.
        public let roleNameArn: String

        public init(snsTopicArn: String, dataSetType: SupportDataSetType, destinationS3Prefix: String? = nil, customerDefinedValues: [String: String]? = nil, destinationS3BucketName: String, fromDate: TimeStamp, roleNameArn: String) {
            self.snsTopicArn = snsTopicArn
            self.dataSetType = dataSetType
            self.destinationS3Prefix = destinationS3Prefix
            self.customerDefinedValues = customerDefinedValues
            self.destinationS3BucketName = destinationS3BucketName
            self.fromDate = fromDate
            self.roleNameArn = roleNameArn
        }

        private enum CodingKeys: String, CodingKey {
            case snsTopicArn = "snsTopicArn"
            case dataSetType = "dataSetType"
            case destinationS3Prefix = "destinationS3Prefix"
            case customerDefinedValues = "customerDefinedValues"
            case destinationS3BucketName = "destinationS3BucketName"
            case fromDate = "fromDate"
            case roleNameArn = "roleNameArn"
        }
    }

    public struct GenerateDataSetResult: AWSShape {
        public static var members: [AWSShapeMember] = [
            AWSShapeMember(label: "dataSetRequestId", required: false, type: .string)
        ]
        /// A unique identifier representing a specific request to the GenerateDataSet operation. This identifier can be used to correlate a request with notifications from the SNS topic.
        public let dataSetRequestId: String?

        public init(dataSetRequestId: String? = nil) {
            self.dataSetRequestId = dataSetRequestId
        }

        private enum CodingKeys: String, CodingKey {
            case dataSetRequestId = "dataSetRequestId"
        }
    }

}