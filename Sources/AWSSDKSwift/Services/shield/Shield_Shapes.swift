// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
/**
The MIT License (MIT)

Copyright (c) 2017 Yuki Takei(noppoMan)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

import Foundation
import Core

extension Shield {

    public struct Protection: Serializable, Initializable {
        /// The ARN (Amazon Resource Name) of the AWS resource that is protected.
        var resourceArn: String? = nil
        /// The friendly name of the protection. For example, My CloudFront distributions.
        var name: String? = nil
        /// The unique identifier (ID) of the protection.
        var id: String? = nil

        public init() {}

        public init(resourceArn: String? = nil, name: String? = nil, id: String? = nil) {
            self.resourceArn = resourceArn
            self.name = name
            self.id = id
        }

    }

    public struct DeleteSubscriptionRequest: Serializable, Initializable {

        public init() {}

    }

    public struct AttackSummary: Serializable, Initializable {
        /// The start time of the attack, in the format 2016-12-16T13:50Z.
        var startTime: Date? = nil
        /// The end time of the attack, in the format 2016-12-16T13:50Z.
        var endTime: Date? = nil
        /// The ARN (Amazon Resource Name) of the resource that was attacked.
        var resourceArn: String? = nil
        /// The list of attacks for a specified time period.
        var attackVectors: [AttackVectorDescription]? = nil
        /// The unique identifier (ID) of the attack.
        var attackId: String? = nil

        public init() {}

        public init(startTime: Date? = nil, endTime: Date? = nil, resourceArn: String? = nil, attackVectors: [AttackVectorDescription]? = nil, attackId: String? = nil) {
            self.startTime = startTime
            self.endTime = endTime
            self.resourceArn = resourceArn
            self.attackVectors = attackVectors
            self.attackId = attackId
        }

    }

    public struct Subscription: Serializable, Initializable {
        /// The start time of the subscription, in the format "2016-12-16T13:50Z".
        var startTime: Date? = nil
        /// The length, in seconds, of the AWS Shield Advanced subscription for the account.
        var timeCommitmentInSeconds: Int64? = nil

        public init() {}

        public init(startTime: Date? = nil, timeCommitmentInSeconds: Int64? = nil) {
            self.startTime = startTime
            self.timeCommitmentInSeconds = timeCommitmentInSeconds
        }

    }

    public struct AttackDetail: Serializable, Initializable {
        /// The time the attack started, in the format 2016-12-16T13:50Z.
        var startTime: Date? = nil
        /// List of mitigation actions taken for the attack.
        var mitigations: [Mitigation]? = nil
        /// The ARN (Amazon Resource Name) of the resource that was attacked.
        var resourceArn: String? = nil
        /// The time the attack ended, in the format 2016-12-16T13:50Z.
        var endTime: Date? = nil
        /// If applicable, additional detail about the resource being attacked, for example, IP address or URL.
        var subResources: [SubResourceSummary]? = nil
        /// List of counters that describe the attack for the specified time period.
        var attackCounters: [SummarizedCounter]? = nil
        /// The unique identifier (ID) of the attack.
        var attackId: String? = nil

        public init() {}

        public init(startTime: Date? = nil, mitigations: [Mitigation]? = nil, resourceArn: String? = nil, endTime: Date? = nil, subResources: [SubResourceSummary]? = nil, attackCounters: [SummarizedCounter]? = nil, attackId: String? = nil) {
            self.startTime = startTime
            self.mitigations = mitigations
            self.resourceArn = resourceArn
            self.endTime = endTime
            self.subResources = subResources
            self.attackCounters = attackCounters
            self.attackId = attackId
        }

    }

    public struct ListAttacksResponse: Serializable, Initializable {
        /// The token returned by a previous call to indicate that there is more data available. If not null, more results are available. Pass this value for the NextMarker parameter in a subsequent call to ListAttacks to retrieve the next set of items.
        var nextToken: String? = nil
        /// The attack information for the specified time range.
        var attackSummaries: [AttackSummary]? = nil

        public init() {}

        public init(nextToken: String? = nil, attackSummaries: [AttackSummary]? = nil) {
            self.nextToken = nextToken
            self.attackSummaries = attackSummaries
        }

    }

    public struct DescribeAttackResponse: Serializable, Initializable {
        /// The attack that is described.
        var attack: AttackDetail? = nil

        public init() {}

        public init(attack: AttackDetail? = nil) {
            self.attack = attack
        }

    }

    public struct ListProtectionsResponse: Serializable, Initializable {
        /// If you specify a value for MaxResults and you have more Protections than the value of MaxResults, AWS Shield Advanced returns a NextToken value in the response that allows you to list another group of Protections. For the second and subsequent ListProtections requests, specify the value of NextToken from the previous response to get information about another batch of Protections.
        var nextToken: String? = nil
        /// The array of enabled Protection objects.
        var protections: [Protection]? = nil

        public init() {}

        public init(nextToken: String? = nil, protections: [Protection]? = nil) {
            self.nextToken = nextToken
            self.protections = protections
        }

    }

    public struct SummarizedCounter: Serializable, Initializable {
        /// The unit of the counters.
        var unit: String? = nil
        /// The average value of the counter for a specified time period.
        var average: Double? = nil
        /// The number of counters for a specified time period.
        var n: Int32? = nil
        /// The maximum value of the counter for a specified time period.
        var max: Double? = nil
        /// The counter name.
        var name: String? = nil
        /// The total of counter values for a specified time period.
        var sum: Double? = nil

        public init() {}

        public init(unit: String? = nil, average: Double? = nil, n: Int32? = nil, max: Double? = nil, name: String? = nil, sum: Double? = nil) {
            self.unit = unit
            self.average = average
            self.n = n
            self.max = max
            self.name = name
            self.sum = sum
        }

    }

    public struct CreateProtectionRequest: Serializable, Initializable {
        /// Friendly name for the Protection you are creating.
        var name: String = ""
        /// The ARN (Amazon Resource Name) of the resource to be protected.
        var resourceArn: String = ""

        public init() {}

        public init(name: String, resourceArn: String) {
            self.name = name
            self.resourceArn = resourceArn
        }

    }

    public struct DescribeProtectionRequest: Serializable, Initializable {
        /// The unique identifier (ID) for the Protection object that is described.
        var protectionId: String = ""

        public init() {}

        public init(protectionId: String) {
            self.protectionId = protectionId
        }

    }

    public struct DescribeAttackRequest: Serializable, Initializable {
        /// The unique identifier (ID) for the attack that to be described.
        var attackId: String = ""

        public init() {}

        public init(attackId: String) {
            self.attackId = attackId
        }

    }

    public struct DescribeProtectionResponse: Serializable, Initializable {
        /// The Protection object that is described.
        var protection: Protection? = nil

        public init() {}

        public init(protection: Protection? = nil) {
            self.protection = protection
        }

    }

    public struct DeleteProtectionRequest: Serializable, Initializable {
        /// The unique identifier (ID) for the Protection object to be deleted.
        var protectionId: String = ""

        public init() {}

        public init(protectionId: String) {
            self.protectionId = protectionId
        }

    }

    public struct DeleteSubscriptionResponse: Serializable, Initializable {

        public init() {}

    }

    public struct TimeRange: Serializable, Initializable {
        /// The end time, in the format 2016-12-16T15:50Z.
        var toExclusive: Date? = nil
        /// The start time, in the format 2016-12-16T13:50Z.
        var fromInclusive: Date? = nil

        public init() {}

        public init(toExclusive: Date? = nil, fromInclusive: Date? = nil) {
            self.toExclusive = toExclusive
            self.fromInclusive = fromInclusive
        }

    }

    public struct CreateSubscriptionResponse: Serializable, Initializable {

        public init() {}

    }

    public struct CreateProtectionResponse: Serializable, Initializable {
        /// The unique identifier (ID) for the Protection object that is created.
        var protectionId: String? = nil

        public init() {}

        public init(protectionId: String? = nil) {
            self.protectionId = protectionId
        }

    }

    public struct SummarizedAttackVector: Serializable, Initializable {
        /// The list of counters that describe the details of the attack.
        var vectorCounters: [SummarizedCounter]? = nil
        /// The attack type, for example, SNMP reflection or SYN flood.
        var vectorType: String = ""

        public init() {}

        public init(vectorCounters: [SummarizedCounter]? = nil, vectorType: String) {
            self.vectorCounters = vectorCounters
            self.vectorType = vectorType
        }

    }

    public struct Mitigation: Serializable, Initializable {
        /// The name of the mitigation taken for this attack.
        var mitigationName: String? = nil

        public init() {}

        public init(mitigationName: String? = nil) {
            self.mitigationName = mitigationName
        }

    }

    public struct DescribeSubscriptionResponse: Serializable, Initializable {
        /// The AWS Shield Advanced subscription details for an account.
        var subscription: Subscription? = nil

        public init() {}

        public init(subscription: Subscription? = nil) {
            self.subscription = subscription
        }

    }

    public struct CreateSubscriptionRequest: Serializable, Initializable {

        public init() {}

    }

    public struct ListAttacksRequest: Serializable, Initializable {
        /// The time period for the attacks.
        var startTime: TimeRange? = nil
        /// The ARN (Amazon Resource Name) of the resource that was attacked. If this is left blank, all applicable resources for this account will be included.
        var resourceArns: [String]? = nil
        /// The end of the time period for the attacks.
        var endTime: TimeRange? = nil
        /// The ListAttacksRequest.NextMarker value from a previous call to ListAttacksRequest. Pass null if this is the first call.
        var nextToken: String? = nil
        /// The maximum number of AttackSummary objects to be returned. If this is left blank, the first 20 results will be returned.
        var maxResults: Int32? = nil

        public init() {}

        public init(startTime: TimeRange? = nil, resourceArns: [String]? = nil, endTime: TimeRange? = nil, nextToken: String? = nil, maxResults: Int32? = nil) {
            self.startTime = startTime
            self.resourceArns = resourceArns
            self.endTime = endTime
            self.nextToken = nextToken
            self.maxResults = maxResults
        }

    }

    public struct AttackVectorDescription: Serializable, Initializable {
        /// The attack type, for example, SNMP reflection or SYN flood.
        var vectorType: String = ""

        public init() {}

        public init(vectorType: String) {
            self.vectorType = vectorType
        }

    }

    public struct SubResourceSummary: Serializable, Initializable {
        /// The counters that describe the details of the attack.
        var counters: [SummarizedCounter]? = nil
        /// The SubResource type.
        var type: String? = nil
        /// The list of attack types and associated counters.
        var attackVectors: [SummarizedAttackVector]? = nil
        /// The unique identifier (ID) of the SubResource.
        var id: String? = nil

        public init() {}

        public init(counters: [SummarizedCounter]? = nil, type: String? = nil, attackVectors: [SummarizedAttackVector]? = nil, id: String? = nil) {
            self.counters = counters
            self.type = type
            self.attackVectors = attackVectors
            self.id = id
        }

    }

    public struct ListProtectionsRequest: Serializable, Initializable {
        /// The ListProtectionsRequest.NextToken value from a previous call to ListProtections. Pass null if this is the first call.
        var nextToken: String? = nil
        /// The maximum number of Protection objects to be returned. If this is left blank the first 20 results will be returned.
        var maxResults: Int32? = nil

        public init() {}

        public init(nextToken: String? = nil, maxResults: Int32? = nil) {
            self.nextToken = nextToken
            self.maxResults = maxResults
        }

    }

    public struct DescribeSubscriptionRequest: Serializable, Initializable {

        public init() {}

    }

    public struct DeleteProtectionResponse: Serializable, Initializable {

        public init() {}

    }

}