// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
/**
The MIT License (MIT)

Copyright (c) 2017 Yuki Takei(noppoMan)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

import Foundation
import Core

/**
AWS Shield Advanced This is the AWS Shield Advanced API Reference. This guide is for developers who need detailed information about the AWS Shield Advanced API actions, data types, and errors. For detailed information about AWS WAF and AWS Shield Advanced features and an overview of how to use the AWS WAF and AWS Shield Advanced APIs, see the AWS WAF and AWS Shield Developer Guide.
*/
public struct Shield {

    let request: AWSRequest

    public init(accessKeyId: String? = nil, secretAccessKey: String? = nil, region: Core.Region? = nil, endpoint: String? = nil) {
        self.request = AWSRequest(
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            region: region,
            amzTarget: "AWSShield_20160616",
            service: "shield",
            endpoint: endpoint
        )
    }

    ///  Activates AWS Shield Advanced for an account.
    public func createSubscription(_ input: CreateSubscriptionRequest) throws -> CreateSubscriptionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "CreateSubscription", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Returns all ongoing DDoS attacks or all DDoS attacks during a specified time period.
    public func listAttacks(_ input: ListAttacksRequest) throws -> ListAttacksResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "ListAttacks", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Describes the details of a DDoS attack. 
    public func describeAttack(_ input: DescribeAttackRequest) throws -> DescribeAttackResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "DescribeAttack", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Enables AWS Shield Advanced for a specific AWS resource. The resource can be an Amazon CloudFront distribution, Elastic Load Balancing load balancer, or an Amazon Route 53 hosted zone.
    public func createProtection(_ input: CreateProtectionRequest) throws -> CreateProtectionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "CreateProtection", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Lists the details of a Protection object.
    public func describeProtection(_ input: DescribeProtectionRequest) throws -> DescribeProtectionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "DescribeProtection", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Deletes an AWS Shield Advanced Protection.
    public func deleteProtection(_ input: DeleteProtectionRequest) throws -> DeleteProtectionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "DeleteProtection", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Provides details about the AWS Shield Advanced subscription for an account.
    public func describeSubscription(_ input: DescribeSubscriptionRequest) throws -> DescribeSubscriptionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "DescribeSubscription", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Removes AWS Shield Advanced from an account.
    public func deleteSubscription(_ input: DeleteSubscriptionRequest) throws -> DeleteSubscriptionResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "DeleteSubscription", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }

    ///  Lists all Protection objects for the account.
    public func listProtections(_ input: ListProtectionsRequest) throws -> ListProtectionsResponse {
        let (bodyData, urlResponse) = try request.invoke(operation: "ListProtections", path: "/", httpMethod: "POST", httpHeaders: [:], input: input)
        return try ShieldResponseBuilder(bodyData: bodyData, urlResponse: urlResponse).build()
    }


}