// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension ManagedBlockchain {

    ///  Returns a listing of all invitations made on the specified network.
    public func listInvitationsPaginator(_ input: ListInvitationsInput) -> EventLoopFuture<[Invitation]> {
        return client.paginate(input: input, command: listInvitations, resultKey: "invitations", tokenKey: "nextToken")
    }
    
    ///  Returns a listing of the members in a network and properties of their configurations.
    public func listMembersPaginator(_ input: ListMembersInput) -> EventLoopFuture<[MemberSummary]> {
        return client.paginate(input: input, command: listMembers, resultKey: "members", tokenKey: "nextToken")
    }
    
    ///  Returns information about the networks in which the current AWS account has members.
    public func listNetworksPaginator(_ input: ListNetworksInput) -> EventLoopFuture<[NetworkSummary]> {
        return client.paginate(input: input, command: listNetworks, resultKey: "networks", tokenKey: "nextToken")
    }
    
    ///  Returns information about the nodes within a network.
    public func listNodesPaginator(_ input: ListNodesInput) -> EventLoopFuture<[NodeSummary]> {
        return client.paginate(input: input, command: listNodes, resultKey: "nodes", tokenKey: "nextToken")
    }
    
    ///  Returns the listing of votes for a specified proposal, including the value of each vote and the unique identifier of the member that cast the vote.
    public func listProposalVotesPaginator(_ input: ListProposalVotesInput) -> EventLoopFuture<[VoteSummary]> {
        return client.paginate(input: input, command: listProposalVotes, resultKey: "proposalVotes", tokenKey: "nextToken")
    }
    
    ///  Returns a listing of proposals for the network.
    public func listProposalsPaginator(_ input: ListProposalsInput) -> EventLoopFuture<[ProposalSummary]> {
        return client.paginate(input: input, command: listProposals, resultKey: "proposals", tokenKey: "nextToken")
    }
    
}

extension ManagedBlockchain.ListInvitationsInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListInvitationsInput, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension ManagedBlockchain.ListMembersInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListMembersInput, token: String) {
        self.init(
            isOwned: original.isOwned, 
            maxResults: original.maxResults, 
            name: original.name, 
            networkId: original.networkId, 
            nextToken: token, 
            status: original.status
        )
    }
}

extension ManagedBlockchain.ListNetworksInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListNetworksInput, token: String) {
        self.init(
            framework: original.framework, 
            maxResults: original.maxResults, 
            name: original.name, 
            nextToken: token, 
            status: original.status
        )
    }
}

extension ManagedBlockchain.ListNodesInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListNodesInput, token: String) {
        self.init(
            maxResults: original.maxResults, 
            memberId: original.memberId, 
            networkId: original.networkId, 
            nextToken: token, 
            status: original.status
        )
    }
}

extension ManagedBlockchain.ListProposalVotesInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListProposalVotesInput, token: String) {
        self.init(
            maxResults: original.maxResults, 
            networkId: original.networkId, 
            nextToken: token, 
            proposalId: original.proposalId
        )
    }
}

extension ManagedBlockchain.ListProposalsInput: AWSPaginateStringToken {
    public init(_ original: ManagedBlockchain.ListProposalsInput, token: String) {
        self.init(
            maxResults: original.maxResults, 
            networkId: original.networkId, 
            nextToken: token
        )
    }
}


