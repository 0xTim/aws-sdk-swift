// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.


extension Personalize {

    ///  Gets a list of the batch inference jobs that have been performed off of a solution version.
    public func listBatchInferenceJobsPaginator(_ input: ListBatchInferenceJobsRequest) -> EventLoopFuture<[BatchInferenceJobSummary]> {
        return client.paginate(input: input, command: listBatchInferenceJobs, resultKey: "batchInferenceJobs", tokenKey: "nextToken")
    }
    
    ///  Returns a list of campaigns that use the given solution. When a solution is not specified, all the campaigns associated with the account are listed. The response provides the properties for each campaign, including the Amazon Resource Name (ARN). For more information on campaigns, see CreateCampaign.
    public func listCampaignsPaginator(_ input: ListCampaignsRequest) -> EventLoopFuture<[CampaignSummary]> {
        return client.paginate(input: input, command: listCampaigns, resultKey: "campaigns", tokenKey: "nextToken")
    }
    
    ///  Returns a list of dataset groups. The response provides the properties for each dataset group, including the Amazon Resource Name (ARN). For more information on dataset groups, see CreateDatasetGroup.
    public func listDatasetGroupsPaginator(_ input: ListDatasetGroupsRequest) -> EventLoopFuture<[DatasetGroupSummary]> {
        return client.paginate(input: input, command: listDatasetGroups, resultKey: "datasetGroups", tokenKey: "nextToken")
    }
    
    ///  Returns a list of dataset import jobs that use the given dataset. When a dataset is not specified, all the dataset import jobs associated with the account are listed. The response provides the properties for each dataset import job, including the Amazon Resource Name (ARN). For more information on dataset import jobs, see CreateDatasetImportJob. For more information on datasets, see CreateDataset.
    public func listDatasetImportJobsPaginator(_ input: ListDatasetImportJobsRequest) -> EventLoopFuture<[DatasetImportJobSummary]> {
        return client.paginate(input: input, command: listDatasetImportJobs, resultKey: "datasetImportJobs", tokenKey: "nextToken")
    }
    
    ///  Returns the list of datasets contained in the given dataset group. The response provides the properties for each dataset, including the Amazon Resource Name (ARN). For more information on datasets, see CreateDataset.
    public func listDatasetsPaginator(_ input: ListDatasetsRequest) -> EventLoopFuture<[DatasetSummary]> {
        return client.paginate(input: input, command: listDatasets, resultKey: "datasets", tokenKey: "nextToken")
    }
    
    ///  Returns the list of event trackers associated with the account. The response provides the properties for each event tracker, including the Amazon Resource Name (ARN) and tracking ID. For more information on event trackers, see CreateEventTracker.
    public func listEventTrackersPaginator(_ input: ListEventTrackersRequest) -> EventLoopFuture<[EventTrackerSummary]> {
        return client.paginate(input: input, command: listEventTrackers, resultKey: "eventTrackers", tokenKey: "nextToken")
    }
    
    ///  Returns a list of available recipes. The response provides the properties for each recipe, including the recipe's Amazon Resource Name (ARN).
    public func listRecipesPaginator(_ input: ListRecipesRequest) -> EventLoopFuture<[RecipeSummary]> {
        return client.paginate(input: input, command: listRecipes, resultKey: "recipes", tokenKey: "nextToken")
    }
    
    ///  Returns the list of schemas associated with the account. The response provides the properties for each schema, including the Amazon Resource Name (ARN). For more information on schemas, see CreateSchema.
    public func listSchemasPaginator(_ input: ListSchemasRequest) -> EventLoopFuture<[DatasetSchemaSummary]> {
        return client.paginate(input: input, command: listSchemas, resultKey: "schemas", tokenKey: "nextToken")
    }
    
    ///  Returns a list of solution versions for the given solution. When a solution is not specified, all the solution versions associated with the account are listed. The response provides the properties for each solution version, including the Amazon Resource Name (ARN). For more information on solutions, see CreateSolution.
    public func listSolutionVersionsPaginator(_ input: ListSolutionVersionsRequest) -> EventLoopFuture<[SolutionVersionSummary]> {
        return client.paginate(input: input, command: listSolutionVersions, resultKey: "solutionVersions", tokenKey: "nextToken")
    }
    
    ///  Returns a list of solutions that use the given dataset group. When a dataset group is not specified, all the solutions associated with the account are listed. The response provides the properties for each solution, including the Amazon Resource Name (ARN). For more information on solutions, see CreateSolution.
    public func listSolutionsPaginator(_ input: ListSolutionsRequest) -> EventLoopFuture<[SolutionSummary]> {
        return client.paginate(input: input, command: listSolutions, resultKey: "solutions", tokenKey: "nextToken")
    }
    
}

extension Personalize.ListBatchInferenceJobsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            solutionVersionArn: original.solutionVersionArn
        )
    }
}

extension Personalize.ListCampaignsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            solutionArn: original.solutionArn
        )
    }
}

extension Personalize.ListDatasetGroupsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Personalize.ListDatasetImportJobsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            datasetArn: original.datasetArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Personalize.ListDatasetsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            datasetGroupArn: original.datasetGroupArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Personalize.ListEventTrackersRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            datasetGroupArn: original.datasetGroupArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Personalize.ListRecipesRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            recipeProvider: original.recipeProvider
        )
    }
}

extension Personalize.ListSchemasRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Personalize.ListSolutionVersionsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            solutionArn: original.solutionArn
        )
    }
}

extension Personalize.ListSolutionsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            datasetGroupArn: original.datasetGroupArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}


