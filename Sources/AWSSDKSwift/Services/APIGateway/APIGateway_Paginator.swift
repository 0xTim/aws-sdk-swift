// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.


extension APIGateway {

    ///  Gets information about the current ApiKeys resource.
    public func getApiKeysPaginator(_ input: GetApiKeysRequest) -> Future<[ApiKey]> {
        return client.paginate(input: input, command: getApiKeys, resultKey: "items", tokenKey: "position")
    }
    
    ///  Represents a collection of BasePathMapping resources.
    public func getBasePathMappingsPaginator(_ input: GetBasePathMappingsRequest) -> Future<[BasePathMapping]> {
        return client.paginate(input: input, command: getBasePathMappings, resultKey: "items", tokenKey: "position")
    }
    
    ///  Gets a collection of ClientCertificate resources.
    public func getClientCertificatesPaginator(_ input: GetClientCertificatesRequest) -> Future<[ClientCertificate]> {
        return client.paginate(input: input, command: getClientCertificates, resultKey: "items", tokenKey: "position")
    }
    
    ///  Gets information about a Deployments collection.
    public func getDeploymentsPaginator(_ input: GetDeploymentsRequest) -> Future<[Deployment]> {
        return client.paginate(input: input, command: getDeployments, resultKey: "items", tokenKey: "position")
    }
    
    ///  Represents a collection of DomainName resources.
    public func getDomainNamesPaginator(_ input: GetDomainNamesRequest) -> Future<[DomainName]> {
        return client.paginate(input: input, command: getDomainNames, resultKey: "items", tokenKey: "position")
    }
    
    ///  Describes existing Models defined for a RestApi resource.
    public func getModelsPaginator(_ input: GetModelsRequest) -> Future<[Model]> {
        return client.paginate(input: input, command: getModels, resultKey: "items", tokenKey: "position")
    }
    
    ///  Lists information about a collection of Resource resources.
    public func getResourcesPaginator(_ input: GetResourcesRequest) -> Future<[Resource]> {
        return client.paginate(input: input, command: getResources, resultKey: "items", tokenKey: "position")
    }
    
    ///  Lists the RestApis resources for your collection.
    public func getRestApisPaginator(_ input: GetRestApisRequest) -> Future<[RestApi]> {
        return client.paginate(input: input, command: getRestApis, resultKey: "items", tokenKey: "position")
    }
    
    ///  Gets all the usage plan keys representing the API keys added to a specified usage plan.
    public func getUsagePlanKeysPaginator(_ input: GetUsagePlanKeysRequest) -> Future<[UsagePlanKey]> {
        return client.paginate(input: input, command: getUsagePlanKeys, resultKey: "items", tokenKey: "position")
    }
    
    ///  Gets all the usage plans of the caller's account.
    public func getUsagePlansPaginator(_ input: GetUsagePlansRequest) -> Future<[UsagePlan]> {
        return client.paginate(input: input, command: getUsagePlans, resultKey: "items", tokenKey: "position")
    }
    
    ///  Gets the VpcLinks collection under the caller's account in a selected region.
    public func getVpcLinksPaginator(_ input: GetVpcLinksRequest) -> Future<[VpcLink]> {
        return client.paginate(input: input, command: getVpcLinks, resultKey: "items", tokenKey: "position")
    }
    
}

extension APIGateway.GetApiKeysRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            customerId: original.customerId, 
            includeValues: original.includeValues, 
            limit: original.limit, 
            nameQuery: original.nameQuery, 
            position: token
        )
    }
}

extension APIGateway.GetBasePathMappingsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            domainName: original.domainName, 
            limit: original.limit, 
            position: token
        )
    }
}

extension APIGateway.GetClientCertificatesRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token
        )
    }
}

extension APIGateway.GetDeploymentsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token, 
            restApiId: original.restApiId
        )
    }
}

extension APIGateway.GetDomainNamesRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token
        )
    }
}

extension APIGateway.GetModelsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token, 
            restApiId: original.restApiId
        )
    }
}

extension APIGateway.GetResourcesRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            embed: original.embed, 
            limit: original.limit, 
            position: token, 
            restApiId: original.restApiId
        )
    }
}

extension APIGateway.GetRestApisRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token
        )
    }
}

extension APIGateway.GetUsagePlanKeysRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            nameQuery: original.nameQuery, 
            position: token, 
            usagePlanId: original.usagePlanId
        )
    }
}

extension APIGateway.GetUsagePlansRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            keyId: original.keyId, 
            limit: original.limit, 
            position: token
        )
    }
}

extension APIGateway.GetVpcLinksRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            position: token
        )
    }
}


