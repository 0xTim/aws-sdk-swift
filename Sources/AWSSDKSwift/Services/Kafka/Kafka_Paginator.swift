// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension Kafka {

    ///  Returns a list of all the operations that have been performed on the specified MSK cluster.
    public func listClusterOperationsPaginator(_ input: ListClusterOperationsRequest, onPage: @escaping ([ClusterOperationInfo], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listClusterOperations, resultKey: \ListClusterOperationsResponse.clusterOperationInfoList, tokenKey: \ListClusterOperationsResponse.nextToken, onPage: onPage)
    }
    
    ///  Returns a list of all the MSK clusters in the current Region.
    public func listClustersPaginator(_ input: ListClustersRequest, onPage: @escaping ([ClusterInfo], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listClusters, resultKey: \ListClustersResponse.clusterInfoList, tokenKey: \ListClustersResponse.nextToken, onPage: onPage)
    }
    
    ///  Returns a list of all the revisions of an MSK configuration.
    public func listConfigurationRevisionsPaginator(_ input: ListConfigurationRevisionsRequest, onPage: @escaping ([ConfigurationRevision], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listConfigurationRevisions, resultKey: \ListConfigurationRevisionsResponse.revisions, tokenKey: \ListConfigurationRevisionsResponse.nextToken, onPage: onPage)
    }
    
    ///  Returns a list of all the MSK configurations in this Region.
    public func listConfigurationsPaginator(_ input: ListConfigurationsRequest, onPage: @escaping ([Configuration], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listConfigurations, resultKey: \ListConfigurationsResponse.configurations, tokenKey: \ListConfigurationsResponse.nextToken, onPage: onPage)
    }
    
    ///  Returns a list of the broker nodes in the cluster.
    public func listNodesPaginator(_ input: ListNodesRequest, onPage: @escaping ([NodeInfo], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listNodes, resultKey: \ListNodesResponse.nodeInfoList, tokenKey: \ListNodesResponse.nextToken, onPage: onPage)
    }
    
}

extension Kafka.ListClusterOperationsRequest: AWSPaginateStringToken {
    public init(_ original: Kafka.ListClusterOperationsRequest, token: String) {
        self.init(
            clusterArn: original.clusterArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Kafka.ListClustersRequest: AWSPaginateStringToken {
    public init(_ original: Kafka.ListClustersRequest, token: String) {
        self.init(
            clusterNameFilter: original.clusterNameFilter, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Kafka.ListConfigurationRevisionsRequest: AWSPaginateStringToken {
    public init(_ original: Kafka.ListConfigurationRevisionsRequest, token: String) {
        self.init(
            arn: original.arn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Kafka.ListConfigurationsRequest: AWSPaginateStringToken {
    public init(_ original: Kafka.ListConfigurationsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension Kafka.ListNodesRequest: AWSPaginateStringToken {
    public init(_ original: Kafka.ListNodesRequest, token: String) {
        self.init(
            clusterArn: original.clusterArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}


