// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

/**
The Amazon Connect API Reference provides descriptions, syntax, and usage examples for each of the Amazon Connect actions, data types, parameters, and errors. Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.
*/
public struct Connect {

    let client: AWSClient

    public init(accessKeyId: String? = nil, secretAccessKey: String? = nil, region: AWSSDKSwiftCore.Region? = nil, endpoint: String? = nil) {
        self.client = AWSClient(
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            region: region,
            service: "connect",
            serviceProtocol: ServiceProtocol(type: .restjson, version: ServiceProtocol.Version(major: 1, minor: 1)),
            apiVersion: "2017-08-08",
            endpoint: endpoint,
            middlewares: [],
            possibleErrorTypes: [ConnectError.self]
        )
    }

    ///  Ends the contact initiated by the StartOutboundVoiceContact operation. If you are using an IAM account, it must have permission to the connect:StopContact action.
    public func stopContact(_ input: StopContactRequest) throws -> StopContactResponse {
        return try client.send(operation: "StopContact", path: "/contact/stop", httpMethod: "POST", input: input)
    }

    ///  Retrieves a token for federation.
    public func getFederationToken(_ input: GetFederationTokenRequest) throws -> GetFederationTokenResponse {
        return try client.send(operation: "GetFederationToken", path: "/user/federate/{InstanceId}", httpMethod: "GET", input: input)
    }

    ///  Returns a HierarchyGroup object that includes information about a hierarchy group in your instance.
    public func describeUserHierarchyGroup(_ input: DescribeUserHierarchyGroupRequest) throws -> DescribeUserHierarchyGroupResponse {
        return try client.send(operation: "DescribeUserHierarchyGroup", path: "/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}", httpMethod: "GET", input: input)
    }

    ///  Updates the phone configuration settings in the UserPhoneConfig object for the specified user.
    public func updateUserPhoneConfig(_ input: UpdateUserPhoneConfigRequest) throws {
        _ = try client.send(operation: "UpdateUserPhoneConfig", path: "/users/{InstanceId}/{UserId}/phone-config", httpMethod: "POST", input: input)
    }

    ///  Returns an array of SecurityProfileSummary objects that contain information about the security profiles in your instance, including the ARN, Id, and Name of the security profile.
    public func listSecurityProfiles(_ input: ListSecurityProfilesRequest) throws -> ListSecurityProfilesResponse {
        return try client.send(operation: "ListSecurityProfiles", path: "/security-profiles-summary/{InstanceId}", httpMethod: "GET", input: input)
    }

    ///  Creates a new user account in your Amazon Connect instance.
    public func createUser(_ input: CreateUserRequest) throws -> CreateUserResponse {
        return try client.send(operation: "CreateUser", path: "/users/{InstanceId}", httpMethod: "PUT", input: input)
    }

    ///  The StartOutboundVoiceContact operation initiates a contact flow to place an outbound call to a customer. There is a throttling limit placed on usage of the API that includes a RateLimit of 2 per second, and a BurstLimit of 5 per second. If you are using an IAM account, it must have permission to the connect:StartOutboundVoiceContact action.
    public func startOutboundVoiceContact(_ input: StartOutboundVoiceContactRequest) throws -> StartOutboundVoiceContactResponse {
        return try client.send(operation: "StartOutboundVoiceContact", path: "/contact/outbound-voice", httpMethod: "PUT", input: input)
    }

    ///  Assigns the specified routing profile to a user.
    public func updateUserRoutingProfile(_ input: UpdateUserRoutingProfileRequest) throws {
        _ = try client.send(operation: "UpdateUserRoutingProfile", path: "/users/{InstanceId}/{UserId}/routing-profile", httpMethod: "POST", input: input)
    }

    ///  Assigns the specified hierarchy group to the user.
    public func updateUserHierarchy(_ input: UpdateUserHierarchyRequest) throws {
        _ = try client.send(operation: "UpdateUserHierarchy", path: "/users/{InstanceId}/{UserId}/hierarchy", httpMethod: "POST", input: input)
    }

    ///  Updates the identity information for the specified user in a UserIdentityInfo object, including email, first name, and last name.
    public func updateUserIdentityInfo(_ input: UpdateUserIdentityInfoRequest) throws {
        _ = try client.send(operation: "UpdateUserIdentityInfo", path: "/users/{InstanceId}/{UserId}/identity-info", httpMethod: "POST", input: input)
    }

    ///  Returns a UserSummaryList, which is an array of UserSummary objects.
    public func listUsers(_ input: ListUsersRequest) throws -> ListUsersResponse {
        return try client.send(operation: "ListUsers", path: "/users-summary/{InstanceId}", httpMethod: "GET", input: input)
    }

    ///  Returns a HiearchyGroupStructure object, which contains data about the levels in the agent hierarchy.
    public func describeUserHierarchyStructure(_ input: DescribeUserHierarchyStructureRequest) throws -> DescribeUserHierarchyStructureResponse {
        return try client.send(operation: "DescribeUserHierarchyStructure", path: "/user-hierarchy-structure/{InstanceId}", httpMethod: "GET", input: input)
    }

    ///  Returns a User object that contains information about the user account specified by the UserId.
    public func describeUser(_ input: DescribeUserRequest) throws -> DescribeUserResponse {
        return try client.send(operation: "DescribeUser", path: "/users/{InstanceId}/{UserId}", httpMethod: "GET", input: input)
    }

    ///  Update the security profiles assigned to the user.
    public func updateUserSecurityProfiles(_ input: UpdateUserSecurityProfilesRequest) throws {
        _ = try client.send(operation: "UpdateUserSecurityProfiles", path: "/users/{InstanceId}/{UserId}/security-profiles", httpMethod: "POST", input: input)
    }

    ///  Deletes a user account from Amazon Connect.
    public func deleteUser(_ input: DeleteUserRequest) throws {
        _ = try client.send(operation: "DeleteUser", path: "/users/{InstanceId}/{UserId}", httpMethod: "DELETE", input: input)
    }

    ///  Returns a UserHierarchyGroupSummaryList, which is an array of HierarchyGroupSummary objects that contain information about the hierarchy groups in your instance.
    public func listUserHierarchyGroups(_ input: ListUserHierarchyGroupsRequest) throws -> ListUserHierarchyGroupsResponse {
        return try client.send(operation: "ListUserHierarchyGroups", path: "/user-hierarchy-groups-summary/{InstanceId}", httpMethod: "GET", input: input)
    }

    ///  Returns an array of RoutingProfileSummary objects that includes information about the routing profiles in your instance.
    public func listRoutingProfiles(_ input: ListRoutingProfilesRequest) throws -> ListRoutingProfilesResponse {
        return try client.send(operation: "ListRoutingProfiles", path: "/routing-profiles-summary/{InstanceId}", httpMethod: "GET", input: input)
    }


}