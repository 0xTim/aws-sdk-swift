// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension MediaLive {

    ///  Get a channel schedule
    public func describeSchedulePaginator(_ input: DescribeScheduleRequest) -> EventLoopFuture<[ScheduleAction]> {
        return client.paginate(input: input, command: describeSchedule, resultKey: "scheduleActions", tokenKey: "nextToken")
    }
    
    ///  Produces list of channels that have been created
    public func listChannelsPaginator(_ input: ListChannelsRequest) -> EventLoopFuture<[ChannelSummary]> {
        return client.paginate(input: input, command: listChannels, resultKey: "channels", tokenKey: "nextToken")
    }
    
    ///  Produces a list of Input Security Groups for an account
    public func listInputSecurityGroupsPaginator(_ input: ListInputSecurityGroupsRequest) -> EventLoopFuture<[InputSecurityGroup]> {
        return client.paginate(input: input, command: listInputSecurityGroups, resultKey: "inputSecurityGroups", tokenKey: "nextToken")
    }
    
    ///  Produces list of inputs that have been created
    public func listInputsPaginator(_ input: ListInputsRequest) -> EventLoopFuture<[Input]> {
        return client.paginate(input: input, command: listInputs, resultKey: "inputs", tokenKey: "nextToken")
    }
    
    ///  List the programs that currently exist for a specific multiplex.
    public func listMultiplexProgramsPaginator(_ input: ListMultiplexProgramsRequest) -> EventLoopFuture<[MultiplexProgramSummary]> {
        return client.paginate(input: input, command: listMultiplexPrograms, resultKey: "multiplexPrograms", tokenKey: "nextToken")
    }
    
    ///  Retrieve a list of the existing multiplexes.
    public func listMultiplexesPaginator(_ input: ListMultiplexesRequest) -> EventLoopFuture<[MultiplexSummary]> {
        return client.paginate(input: input, command: listMultiplexes, resultKey: "multiplexes", tokenKey: "nextToken")
    }
    
    ///  List offerings available for purchase.
    public func listOfferingsPaginator(_ input: ListOfferingsRequest) -> EventLoopFuture<[Offering]> {
        return client.paginate(input: input, command: listOfferings, resultKey: "offerings", tokenKey: "nextToken")
    }
    
    ///  List purchased reservations.
    public func listReservationsPaginator(_ input: ListReservationsRequest) -> EventLoopFuture<[Reservation]> {
        return client.paginate(input: input, command: listReservations, resultKey: "reservations", tokenKey: "nextToken")
    }
    
}

extension MediaLive.DescribeScheduleRequest: AWSPaginateable {
    public init(_ original: MediaLive.DescribeScheduleRequest, token: String) {
        self.init(
            channelId: original.channelId, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension MediaLive.ListChannelsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListChannelsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension MediaLive.ListInputSecurityGroupsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListInputSecurityGroupsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension MediaLive.ListInputsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListInputsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension MediaLive.ListMultiplexProgramsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListMultiplexProgramsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            multiplexId: original.multiplexId, 
            nextToken: token
        )
    }
}

extension MediaLive.ListMultiplexesRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListMultiplexesRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension MediaLive.ListOfferingsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListOfferingsRequest, token: String) {
        self.init(
            channelClass: original.channelClass, 
            channelConfiguration: original.channelConfiguration, 
            codec: original.codec, 
            duration: original.duration, 
            maximumBitrate: original.maximumBitrate, 
            maximumFramerate: original.maximumFramerate, 
            maxResults: original.maxResults, 
            nextToken: token, 
            resolution: original.resolution, 
            resourceType: original.resourceType, 
            specialFeature: original.specialFeature, 
            videoQuality: original.videoQuality
        )
    }
}

extension MediaLive.ListReservationsRequest: AWSPaginateable {
    public init(_ original: MediaLive.ListReservationsRequest, token: String) {
        self.init(
            channelClass: original.channelClass, 
            codec: original.codec, 
            maximumBitrate: original.maximumBitrate, 
            maximumFramerate: original.maximumFramerate, 
            maxResults: original.maxResults, 
            nextToken: token, 
            resolution: original.resolution, 
            resourceType: original.resourceType, 
            specialFeature: original.specialFeature, 
            videoQuality: original.videoQuality
        )
    }
}


