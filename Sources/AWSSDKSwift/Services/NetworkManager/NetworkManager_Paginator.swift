// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension NetworkManager {

    ///  Describes one or more global networks. By default, all global networks are described. To describe the objects in your global network, you must use the appropriate Get* action. For example, to list the transit gateways in your global network, use GetTransitGatewayRegistrations.
    public func describeGlobalNetworksPaginator(_ input: DescribeGlobalNetworksRequest, onPage: @escaping (DescribeGlobalNetworksResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeGlobalNetworks, tokenKey: \DescribeGlobalNetworksResponse.nextToken, onPage: onPage)
    }

    ///  Gets the association information for customer gateways that are associated with devices and links in your global network.
    public func getCustomerGatewayAssociationsPaginator(_ input: GetCustomerGatewayAssociationsRequest, onPage: @escaping (GetCustomerGatewayAssociationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getCustomerGatewayAssociations, tokenKey: \GetCustomerGatewayAssociationsResponse.nextToken, onPage: onPage)
    }

    ///  Gets information about one or more of your devices in a global network.
    public func getDevicesPaginator(_ input: GetDevicesRequest, onPage: @escaping (GetDevicesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getDevices, tokenKey: \GetDevicesResponse.nextToken, onPage: onPage)
    }

    ///  Gets the link associations for a device or a link. Either the device ID or the link ID must be specified.
    public func getLinkAssociationsPaginator(_ input: GetLinkAssociationsRequest, onPage: @escaping (GetLinkAssociationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getLinkAssociations, tokenKey: \GetLinkAssociationsResponse.nextToken, onPage: onPage)
    }

    ///  Gets information about one or more links in a specified global network. If you specify the site ID, you cannot specify the type or provider in the same request. You can specify the type and provider in the same request.
    public func getLinksPaginator(_ input: GetLinksRequest, onPage: @escaping (GetLinksResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getLinks, tokenKey: \GetLinksResponse.nextToken, onPage: onPage)
    }

    ///  Gets information about one or more of your sites in a global network.
    public func getSitesPaginator(_ input: GetSitesRequest, onPage: @escaping (GetSitesResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getSites, tokenKey: \GetSitesResponse.nextToken, onPage: onPage)
    }

    ///  Gets information about the transit gateway registrations in a specified global network.
    public func getTransitGatewayRegistrationsPaginator(_ input: GetTransitGatewayRegistrationsRequest, onPage: @escaping (GetTransitGatewayRegistrationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: getTransitGatewayRegistrations, tokenKey: \GetTransitGatewayRegistrationsResponse.nextToken, onPage: onPage)
    }

}

extension NetworkManager.DescribeGlobalNetworksRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.DescribeGlobalNetworksRequest, token: String) {
        self.init(
            globalNetworkIds: original.globalNetworkIds, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension NetworkManager.GetCustomerGatewayAssociationsRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetCustomerGatewayAssociationsRequest, token: String) {
        self.init(
            customerGatewayArns: original.customerGatewayArns, 
            globalNetworkId: original.globalNetworkId, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension NetworkManager.GetDevicesRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetDevicesRequest, token: String) {
        self.init(
            deviceIds: original.deviceIds, 
            globalNetworkId: original.globalNetworkId, 
            maxResults: original.maxResults, 
            nextToken: token, 
            siteId: original.siteId
        )
    }
}

extension NetworkManager.GetLinkAssociationsRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetLinkAssociationsRequest, token: String) {
        self.init(
            deviceId: original.deviceId, 
            globalNetworkId: original.globalNetworkId, 
            linkId: original.linkId, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension NetworkManager.GetLinksRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetLinksRequest, token: String) {
        self.init(
            globalNetworkId: original.globalNetworkId, 
            linkIds: original.linkIds, 
            maxResults: original.maxResults, 
            nextToken: token, 
            provider: original.provider, 
            siteId: original.siteId, 
            type: original.type
        )
    }
}

extension NetworkManager.GetSitesRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetSitesRequest, token: String) {
        self.init(
            globalNetworkId: original.globalNetworkId, 
            maxResults: original.maxResults, 
            nextToken: token, 
            siteIds: original.siteIds
        )
    }
}

extension NetworkManager.GetTransitGatewayRegistrationsRequest: AWSPaginateStringToken {
    public init(_ original: NetworkManager.GetTransitGatewayRegistrationsRequest, token: String) {
        self.init(
            globalNetworkId: original.globalNetworkId, 
            maxResults: original.maxResults, 
            nextToken: token, 
            transitGatewayArns: original.transitGatewayArns
        )
    }
}


