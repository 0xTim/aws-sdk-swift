// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.


extension CognitoIdentityProvider {

    ///  Lists the groups that the user belongs to. Calling this action requires developer credentials.
    public func adminListGroupsForUserPaginator(_ input: AdminListGroupsForUserRequest) -> Future<[GroupType]> {
        return client.paginate(input: input, command: adminListGroupsForUser, resultKey: "groups", tokenKey: "nextToken")
    }
    
    ///  Lists a history of user activity and any risks detected as part of Amazon Cognito advanced security.
    public func adminListUserAuthEventsPaginator(_ input: AdminListUserAuthEventsRequest) -> Future<[AuthEventType]> {
        return client.paginate(input: input, command: adminListUserAuthEvents, resultKey: "authEvents", tokenKey: "nextToken")
    }
    
    ///  Lists the groups associated with a user pool. Calling this action requires developer credentials.
    public func listGroupsPaginator(_ input: ListGroupsRequest) -> Future<[GroupType]> {
        return client.paginate(input: input, command: listGroups, resultKey: "groups", tokenKey: "nextToken")
    }
    
    ///  Lists information about all identity providers for a user pool.
    public func listIdentityProvidersPaginator(_ input: ListIdentityProvidersRequest) -> Future<[ProviderDescription]> {
        return client.paginate(input: input, command: listIdentityProviders, resultKey: "providers", tokenKey: "nextToken")
    }
    
    ///  Lists the resource servers for a user pool.
    public func listResourceServersPaginator(_ input: ListResourceServersRequest) -> Future<[ResourceServerType]> {
        return client.paginate(input: input, command: listResourceServers, resultKey: "resourceServers", tokenKey: "nextToken")
    }
    
    ///  Lists the clients that have been created for the specified user pool.
    public func listUserPoolClientsPaginator(_ input: ListUserPoolClientsRequest) -> Future<[UserPoolClientDescription]> {
        return client.paginate(input: input, command: listUserPoolClients, resultKey: "userPoolClients", tokenKey: "nextToken")
    }
    
    ///  Lists the user pools associated with an AWS account.
    public func listUserPoolsPaginator(_ input: ListUserPoolsRequest) -> Future<[UserPoolDescriptionType]> {
        return client.paginate(input: input, command: listUserPools, resultKey: "userPools", tokenKey: "nextToken")
    }
    
    ///  Lists the users in the Amazon Cognito user pool.
    public func listUsersPaginator(_ input: ListUsersRequest) -> Future<[UserType]> {
        return client.paginate(input: input, command: listUsers, resultKey: "users", tokenKey: "paginationToken")
    }
    
    ///  Lists the users in the specified group. Calling this action requires developer credentials.
    public func listUsersInGroupPaginator(_ input: ListUsersInGroupRequest) -> Future<[UserType]> {
        return client.paginate(input: input, command: listUsersInGroup, resultKey: "users", tokenKey: "nextToken")
    }
    
}

extension CognitoIdentityProvider.AdminListGroupsForUserRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            nextToken: token, 
            username: original.username, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.AdminListUserAuthEventsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            username: original.username, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListGroupsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            limit: original.limit, 
            nextToken: token, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListIdentityProvidersRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListResourceServersRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListUserPoolClientsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListUserPoolsRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension CognitoIdentityProvider.ListUsersRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            attributesToGet: original.attributesToGet, 
            filter: original.filter, 
            limit: original.limit, 
            paginationToken: token, 
            userPoolId: original.userPoolId
        )
    }
}

extension CognitoIdentityProvider.ListUsersInGroupRequest: AWSPaginateable {
    public init(_ original: Self, token: String) {
        self.init(
            groupName: original.groupName, 
            limit: original.limit, 
            nextToken: token, 
            userPoolId: original.userPoolId
        )
    }
}


