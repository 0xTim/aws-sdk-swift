// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
/**
The MIT License (MIT)

Copyright (c) 2017 Yuki Takei(noppoMan)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

import Foundation
import Core

extension Sms {

    public struct DisassociateConnectorResponse: Serializable, Initializable {

        public init() {}

    }

    public struct Connector: Serializable, Initializable {
        var capabilityList: [String]? = nil
        var status: String? = nil
        var ipAddress: String? = nil
        var vmManagerId: String? = nil
        var version: String? = nil
        var vmManagerType: String? = nil
        var connectorId: String? = nil
        var vmManagerName: String? = nil
        var macAddress: String? = nil
        var associatedOn: Date? = nil

        public init() {}

        public init(capabilityList: [String]? = nil, status: String? = nil, ipAddress: String? = nil, vmManagerId: String? = nil, version: String? = nil, vmManagerType: String? = nil, connectorId: String? = nil, vmManagerName: String? = nil, macAddress: String? = nil, associatedOn: Date? = nil) {
            self.capabilityList = capabilityList
            self.status = status
            self.ipAddress = ipAddress
            self.vmManagerId = vmManagerId
            self.version = version
            self.vmManagerType = vmManagerType
            self.connectorId = connectorId
            self.vmManagerName = vmManagerName
            self.macAddress = macAddress
            self.associatedOn = associatedOn
        }

    }

    public struct GetReplicationRunsRequest: Serializable, Initializable {
        var nextToken: String? = nil
        var maxResults: Int32? = nil
        var replicationJobId: String = ""

        public init() {}

        public init(nextToken: String? = nil, maxResults: Int32? = nil, replicationJobId: String) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.replicationJobId = replicationJobId
        }

    }

    public struct GetConnectorsRequest: Serializable, Initializable {
        var nextToken: String? = nil
        var maxResults: Int32? = nil

        public init() {}

        public init(nextToken: String? = nil, maxResults: Int32? = nil) {
            self.nextToken = nextToken
            self.maxResults = maxResults
        }

    }

    public struct ImportServerCatalogRequest: Serializable, Initializable {

        public init() {}

    }

    public struct GetServersResponse: Serializable, Initializable {
        var serverList: [Server]? = nil
        var serverCatalogStatus: String? = nil
        var nextToken: String? = nil
        var lastModifiedOn: Date? = nil

        public init() {}

        public init(serverList: [Server]? = nil, serverCatalogStatus: String? = nil, nextToken: String? = nil, lastModifiedOn: Date? = nil) {
            self.serverList = serverList
            self.serverCatalogStatus = serverCatalogStatus
            self.nextToken = nextToken
            self.lastModifiedOn = lastModifiedOn
        }

    }

    public struct GetReplicationJobsRequest: Serializable, Initializable {
        var nextToken: String? = nil
        var maxResults: Int32? = nil
        var replicationJobId: String? = nil

        public init() {}

        public init(nextToken: String? = nil, maxResults: Int32? = nil, replicationJobId: String? = nil) {
            self.nextToken = nextToken
            self.maxResults = maxResults
            self.replicationJobId = replicationJobId
        }

    }

    public struct UpdateReplicationJobResponse: Serializable, Initializable {

        public init() {}

    }

    public struct StartOnDemandReplicationRunResponse: Serializable, Initializable {
        var replicationRunId: String? = nil

        public init() {}

        public init(replicationRunId: String? = nil) {
            self.replicationRunId = replicationRunId
        }

    }

    public struct UpdateReplicationJobRequest: Serializable, Initializable {
        var roleName: String? = nil
        var nextReplicationRunStartTime: Date? = nil
        var description: String? = nil
        var frequency: Int32? = nil
        var replicationJobId: String = ""
        var licenseType: String? = nil

        public init() {}

        public init(roleName: String? = nil, nextReplicationRunStartTime: Date? = nil, description: String? = nil, frequency: Int32? = nil, replicationJobId: String, licenseType: String? = nil) {
            self.roleName = roleName
            self.nextReplicationRunStartTime = nextReplicationRunStartTime
            self.description = description
            self.frequency = frequency
            self.replicationJobId = replicationJobId
            self.licenseType = licenseType
        }

    }

    public struct ReplicationRun: Serializable, Initializable {
        var state: String? = nil
        var replicationRunId: String? = nil
        var completedTime: Date? = nil
        var scheduledStartTime: Date? = nil
        var description: String? = nil
        var amiId: String? = nil
        var type: String? = nil
        var statusMessage: String? = nil

        public init() {}

        public init(state: String? = nil, replicationRunId: String? = nil, completedTime: Date? = nil, scheduledStartTime: Date? = nil, description: String? = nil, amiId: String? = nil, type: String? = nil, statusMessage: String? = nil) {
            self.state = state
            self.replicationRunId = replicationRunId
            self.completedTime = completedTime
            self.scheduledStartTime = scheduledStartTime
            self.description = description
            self.amiId = amiId
            self.type = type
            self.statusMessage = statusMessage
        }

    }

    public struct DeleteServerCatalogResponse: Serializable, Initializable {

        public init() {}

    }

    public struct ReplicationJob: Serializable, Initializable {
        var state: String? = nil
        var replicationRunList: [ReplicationRun]? = nil
        var nextReplicationRunStartTime: Date? = nil
        var vmServer: VmServer? = nil
        var licenseType: String? = nil
        var description: String? = nil
        var serverId: String? = nil
        var latestAmiId: String? = nil
        var frequency: Int32? = nil
        var statusMessage: String? = nil
        var replicationJobId: String? = nil
        var roleName: String? = nil
        var seedReplicationTime: Date? = nil
        var serverType: String? = nil

        public init() {}

        public init(state: String? = nil, replicationRunList: [ReplicationRun]? = nil, nextReplicationRunStartTime: Date? = nil, vmServer: VmServer? = nil, licenseType: String? = nil, description: String? = nil, serverId: String? = nil, latestAmiId: String? = nil, frequency: Int32? = nil, statusMessage: String? = nil, replicationJobId: String? = nil, roleName: String? = nil, seedReplicationTime: Date? = nil, serverType: String? = nil) {
            self.state = state
            self.replicationRunList = replicationRunList
            self.nextReplicationRunStartTime = nextReplicationRunStartTime
            self.vmServer = vmServer
            self.licenseType = licenseType
            self.description = description
            self.serverId = serverId
            self.latestAmiId = latestAmiId
            self.frequency = frequency
            self.statusMessage = statusMessage
            self.replicationJobId = replicationJobId
            self.roleName = roleName
            self.seedReplicationTime = seedReplicationTime
            self.serverType = serverType
        }

    }

    public struct ImportServerCatalogResponse: Serializable, Initializable {

        public init() {}

    }

    public struct DeleteReplicationJobResponse: Serializable, Initializable {

        public init() {}

    }

    public struct GetConnectorsResponse: Serializable, Initializable {
        var nextToken: String? = nil
        var connectorList: [Connector]? = nil

        public init() {}

        public init(nextToken: String? = nil, connectorList: [Connector]? = nil) {
            self.nextToken = nextToken
            self.connectorList = connectorList
        }

    }

    public struct CreateReplicationJobRequest: Serializable, Initializable {
        var seedReplicationTime: Date = Date()
        var roleName: String? = nil
        var serverId: String = ""
        var description: String? = nil
        var frequency: Int32 = 0
        var licenseType: String? = nil

        public init() {}

        public init(seedReplicationTime: Date, roleName: String? = nil, serverId: String, description: String? = nil, frequency: Int32, licenseType: String? = nil) {
            self.seedReplicationTime = seedReplicationTime
            self.roleName = roleName
            self.serverId = serverId
            self.description = description
            self.frequency = frequency
            self.licenseType = licenseType
        }

    }

    public struct VmServerAddress: Serializable, Initializable {
        var vmId: String? = nil
        var vmManagerId: String? = nil

        public init() {}

        public init(vmId: String? = nil, vmManagerId: String? = nil) {
            self.vmId = vmId
            self.vmManagerId = vmManagerId
        }

    }

    public struct GetServersRequest: Serializable, Initializable {
        var nextToken: String? = nil
        var maxResults: Int32? = nil

        public init() {}

        public init(nextToken: String? = nil, maxResults: Int32? = nil) {
            self.nextToken = nextToken
            self.maxResults = maxResults
        }

    }

    public struct VmServer: Serializable, Initializable {
        var vmManagerName: String? = nil
        var vmManagerType: String? = nil
        var vmName: String? = nil
        var vmServerAddress: VmServerAddress? = nil
        var vmPath: String? = nil

        public init() {}

        public init(vmManagerName: String? = nil, vmManagerType: String? = nil, vmName: String? = nil, vmServerAddress: VmServerAddress? = nil, vmPath: String? = nil) {
            self.vmManagerName = vmManagerName
            self.vmManagerType = vmManagerType
            self.vmName = vmName
            self.vmServerAddress = vmServerAddress
            self.vmPath = vmPath
        }

    }

    public struct Server: Serializable, Initializable {
        var serverId: String? = nil
        var replicationJobTerminated: Bool? = nil
        var serverType: String? = nil
        var vmServer: VmServer? = nil
        var replicationJobId: String? = nil

        public init() {}

        public init(serverId: String? = nil, replicationJobTerminated: Bool? = nil, serverType: String? = nil, vmServer: VmServer? = nil, replicationJobId: String? = nil) {
            self.serverId = serverId
            self.replicationJobTerminated = replicationJobTerminated
            self.serverType = serverType
            self.vmServer = vmServer
            self.replicationJobId = replicationJobId
        }

    }

    public struct DeleteServerCatalogRequest: Serializable, Initializable {

        public init() {}

    }

    public struct CreateReplicationJobResponse: Serializable, Initializable {
        var replicationJobId: String? = nil

        public init() {}

        public init(replicationJobId: String? = nil) {
            self.replicationJobId = replicationJobId
        }

    }

    public struct StartOnDemandReplicationRunRequest: Serializable, Initializable {
        var description: String? = nil
        var replicationJobId: String = ""

        public init() {}

        public init(description: String? = nil, replicationJobId: String) {
            self.description = description
            self.replicationJobId = replicationJobId
        }

    }

    public struct GetReplicationJobsResponse: Serializable, Initializable {
        var nextToken: String? = nil
        var replicationJobList: [ReplicationJob]? = nil

        public init() {}

        public init(nextToken: String? = nil, replicationJobList: [ReplicationJob]? = nil) {
            self.nextToken = nextToken
            self.replicationJobList = replicationJobList
        }

    }

    public struct DisassociateConnectorRequest: Serializable, Initializable {
        var connectorId: String = ""

        public init() {}

        public init(connectorId: String) {
            self.connectorId = connectorId
        }

    }

    public struct GetReplicationRunsResponse: Serializable, Initializable {
        var replicationJob: ReplicationJob? = nil
        var replicationRunList: [ReplicationRun]? = nil
        var nextToken: String? = nil

        public init() {}

        public init(replicationJob: ReplicationJob? = nil, replicationRunList: [ReplicationRun]? = nil, nextToken: String? = nil) {
            self.replicationJob = replicationJob
            self.replicationRunList = replicationRunList
            self.nextToken = nextToken
        }

    }

    public struct DeleteReplicationJobRequest: Serializable, Initializable {
        var replicationJobId: String = ""

        public init() {}

        public init(replicationJobId: String) {
            self.replicationJobId = replicationJobId
        }

    }

}