// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension DocDB {

    ///  Returns information about provisioned Amazon DocumentDB DB clusters. This API operation supports pagination.
    public func describeDBClustersPaginator(_ input: DescribeDBClustersMessage, onPage: @escaping ([DBCluster], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeDBClusters, resultKey: \DBClusterMessage.dBClusters, tokenKey: \DBClusterMessage.marker, onPage: onPage)
    }
    
    ///  Returns a list of the available DB engines.
    public func describeDBEngineVersionsPaginator(_ input: DescribeDBEngineVersionsMessage, onPage: @escaping ([DBEngineVersion], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeDBEngineVersions, resultKey: \DBEngineVersionMessage.dBEngineVersions, tokenKey: \DBEngineVersionMessage.marker, onPage: onPage)
    }
    
    ///  Returns information about provisioned Amazon DocumentDB instances. This API supports pagination.
    public func describeDBInstancesPaginator(_ input: DescribeDBInstancesMessage, onPage: @escaping ([DBInstance], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeDBInstances, resultKey: \DBInstanceMessage.dBInstances, tokenKey: \DBInstanceMessage.marker, onPage: onPage)
    }
    
    ///  Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.
    public func describeDBSubnetGroupsPaginator(_ input: DescribeDBSubnetGroupsMessage, onPage: @escaping ([DBSubnetGroup], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeDBSubnetGroups, resultKey: \DBSubnetGroupMessage.dBSubnetGroups, tokenKey: \DBSubnetGroupMessage.marker, onPage: onPage)
    }
    
    ///  Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. You can obtain events specific to a particular DB instance, DB security group, DB snapshot, or DB parameter group by providing the name as a parameter. By default, the events of the past hour are returned.
    public func describeEventsPaginator(_ input: DescribeEventsMessage, onPage: @escaping ([Event], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeEvents, resultKey: \EventsMessage.events, tokenKey: \EventsMessage.marker, onPage: onPage)
    }
    
    ///  Returns a list of orderable DB instance options for the specified engine.
    public func describeOrderableDBInstanceOptionsPaginator(_ input: DescribeOrderableDBInstanceOptionsMessage, onPage: @escaping ([OrderableDBInstanceOption], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: describeOrderableDBInstanceOptions, resultKey: \OrderableDBInstanceOptionsMessage.orderableDBInstanceOptions, tokenKey: \OrderableDBInstanceOptionsMessage.marker, onPage: onPage)
    }
    
}

extension DocDB.DescribeDBClustersMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeDBClustersMessage, token: String) {
        self.init(
            dBClusterIdentifier: original.dBClusterIdentifier, 
            filters: original.filters, 
            marker: token, 
            maxRecords: original.maxRecords
        )
    }
}

extension DocDB.DescribeDBEngineVersionsMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeDBEngineVersionsMessage, token: String) {
        self.init(
            dBParameterGroupFamily: original.dBParameterGroupFamily, 
            defaultOnly: original.defaultOnly, 
            engine: original.engine, 
            engineVersion: original.engineVersion, 
            filters: original.filters, 
            listSupportedCharacterSets: original.listSupportedCharacterSets, 
            listSupportedTimezones: original.listSupportedTimezones, 
            marker: token, 
            maxRecords: original.maxRecords
        )
    }
}

extension DocDB.DescribeDBInstancesMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeDBInstancesMessage, token: String) {
        self.init(
            dBInstanceIdentifier: original.dBInstanceIdentifier, 
            filters: original.filters, 
            marker: token, 
            maxRecords: original.maxRecords
        )
    }
}

extension DocDB.DescribeDBSubnetGroupsMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeDBSubnetGroupsMessage, token: String) {
        self.init(
            dBSubnetGroupName: original.dBSubnetGroupName, 
            filters: original.filters, 
            marker: token, 
            maxRecords: original.maxRecords
        )
    }
}

extension DocDB.DescribeEventsMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeEventsMessage, token: String) {
        self.init(
            duration: original.duration, 
            endTime: original.endTime, 
            eventCategories: original.eventCategories, 
            filters: original.filters, 
            marker: token, 
            maxRecords: original.maxRecords, 
            sourceIdentifier: original.sourceIdentifier, 
            sourceType: original.sourceType, 
            startTime: original.startTime
        )
    }
}

extension DocDB.DescribeOrderableDBInstanceOptionsMessage: AWSPaginateStringToken {
    public init(_ original: DocDB.DescribeOrderableDBInstanceOptionsMessage, token: String) {
        self.init(
            dBInstanceClass: original.dBInstanceClass, 
            engine: original.engine, 
            engineVersion: original.engineVersion, 
            filters: original.filters, 
            licenseModel: original.licenseModel, 
            marker: token, 
            maxRecords: original.maxRecords, 
            vpc: original.vpc
        )
    }
}


