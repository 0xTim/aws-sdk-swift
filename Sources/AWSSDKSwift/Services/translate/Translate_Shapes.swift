// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import Foundation
import AWSSDKSwiftCore

extension Translate {

    public struct TranslateTextRequest: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "SourceLanguageCode", required: true, type: .string), 
            AWSShapeMember(label: "Text", required: true, type: .string), 
            AWSShapeMember(label: "TargetLanguageCode", required: true, type: .string)
        ]
        /// One of the supported language codes for the source text. If the TargetLanguageCode is not "en", the SourceLanguageCode must be "en".
        public let sourceLanguageCode: String
        /// The text to translate.
        public let text: String
        /// One of the supported language codes for the target text. If the SourceLanguageCode is not "en", the TargetLanguageCode must be "en".
        public let targetLanguageCode: String

        public init(sourceLanguageCode: String, text: String, targetLanguageCode: String) {
            self.sourceLanguageCode = sourceLanguageCode
            self.text = text
            self.targetLanguageCode = targetLanguageCode
        }

        private enum CodingKeys: String, CodingKey {
            case sourceLanguageCode = "SourceLanguageCode"
            case text = "Text"
            case targetLanguageCode = "TargetLanguageCode"
        }
    }

    public struct TranslateTextResponse: AWSShape {
        public static var _members: [AWSShapeMember] = [
            AWSShapeMember(label: "TranslatedText", required: true, type: .string), 
            AWSShapeMember(label: "TargetLanguageCode", required: true, type: .string), 
            AWSShapeMember(label: "SourceLanguageCode", required: true, type: .string)
        ]
        /// The text translated into the target language.
        public let translatedText: String
        /// The language code for the language of the translated text. 
        public let targetLanguageCode: String
        /// The language code for the language of the input text. 
        public let sourceLanguageCode: String

        public init(translatedText: String, targetLanguageCode: String, sourceLanguageCode: String) {
            self.translatedText = translatedText
            self.targetLanguageCode = targetLanguageCode
            self.sourceLanguageCode = sourceLanguageCode
        }

        private enum CodingKeys: String, CodingKey {
            case translatedText = "TranslatedText"
            case targetLanguageCode = "TargetLanguageCode"
            case sourceLanguageCode = "SourceLanguageCode"
        }
    }

}