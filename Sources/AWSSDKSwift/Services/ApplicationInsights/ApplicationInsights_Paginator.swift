// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension ApplicationInsights {

    ///  Lists the IDs of the applications that you are monitoring. 
    public func listApplicationsPaginator(_ input: ListApplicationsRequest, onPage: @escaping (ListApplicationsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listApplications, tokenKey: \ListApplicationsResponse.nextToken, onPage: onPage)
    }

    ///  Lists the auto-grouped, standalone, and custom components of the application.
    public func listComponentsPaginator(_ input: ListComponentsRequest, onPage: @escaping (ListComponentsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listComponents, tokenKey: \ListComponentsResponse.nextToken, onPage: onPage)
    }

    ///  Lists the log pattern sets in the specific application.
    public func listLogPatternSetsPaginator(_ input: ListLogPatternSetsRequest, onPage: @escaping (ListLogPatternSetsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listLogPatternSets, tokenKey: \ListLogPatternSetsResponse.nextToken, onPage: onPage)
    }

    ///  Lists the log patterns in the specific log LogPatternSet.
    public func listLogPatternsPaginator(_ input: ListLogPatternsRequest, onPage: @escaping (ListLogPatternsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listLogPatterns, tokenKey: \ListLogPatternsResponse.nextToken, onPage: onPage)
    }

    ///  Lists the problems with your application.
    public func listProblemsPaginator(_ input: ListProblemsRequest, onPage: @escaping (ListProblemsResponse, EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listProblems, tokenKey: \ListProblemsResponse.nextToken, onPage: onPage)
    }

}

extension ApplicationInsights.ListApplicationsRequest: AWSPaginateStringToken {
    public init(_ original: ApplicationInsights.ListApplicationsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension ApplicationInsights.ListComponentsRequest: AWSPaginateStringToken {
    public init(_ original: ApplicationInsights.ListComponentsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            resourceGroupName: original.resourceGroupName
        )
    }
}

extension ApplicationInsights.ListLogPatternSetsRequest: AWSPaginateStringToken {
    public init(_ original: ApplicationInsights.ListLogPatternSetsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            resourceGroupName: original.resourceGroupName
        )
    }
}

extension ApplicationInsights.ListLogPatternsRequest: AWSPaginateStringToken {
    public init(_ original: ApplicationInsights.ListLogPatternsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token, 
            patternSetName: original.patternSetName, 
            resourceGroupName: original.resourceGroupName
        )
    }
}

extension ApplicationInsights.ListProblemsRequest: AWSPaginateStringToken {
    public init(_ original: ApplicationInsights.ListProblemsRequest, token: String) {
        self.init(
            endTime: original.endTime, 
            maxResults: original.maxResults, 
            nextToken: token, 
            resourceGroupName: original.resourceGroupName, 
            startTime: original.startTime
        )
    }
}


