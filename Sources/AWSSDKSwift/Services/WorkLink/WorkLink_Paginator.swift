// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension WorkLink {

    ///  Retrieves a list of devices registered with the specified fleet.
    public func listDevicesPaginator(_ input: ListDevicesRequest, onPage: @escaping ([DeviceSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listDevices, resultKey: \ListDevicesResponse.devices, tokenKey: \ListDevicesResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of domains associated to a specified fleet.
    public func listDomainsPaginator(_ input: ListDomainsRequest, onPage: @escaping ([DomainSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listDomains, resultKey: \ListDomainsResponse.domains, tokenKey: \ListDomainsResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of fleets for the current account and Region.
    public func listFleetsPaginator(_ input: ListFleetsRequest, onPage: @escaping ([FleetSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listFleets, resultKey: \ListFleetsResponse.fleetSummaryList, tokenKey: \ListFleetsResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of website authorization providers associated with a specified fleet.
    public func listWebsiteAuthorizationProvidersPaginator(_ input: ListWebsiteAuthorizationProvidersRequest, onPage: @escaping ([WebsiteAuthorizationProviderSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listWebsiteAuthorizationProviders, resultKey: \ListWebsiteAuthorizationProvidersResponse.websiteAuthorizationProviders, tokenKey: \ListWebsiteAuthorizationProvidersResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of certificate authorities added for the current account and Region.
    public func listWebsiteCertificateAuthoritiesPaginator(_ input: ListWebsiteCertificateAuthoritiesRequest, onPage: @escaping ([WebsiteCaSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listWebsiteCertificateAuthorities, resultKey: \ListWebsiteCertificateAuthoritiesResponse.websiteCertificateAuthorities, tokenKey: \ListWebsiteCertificateAuthoritiesResponse.nextToken, onPage: onPage)
    }
    
}

extension WorkLink.ListDevicesRequest: AWSPaginateStringToken {
    public init(_ original: WorkLink.ListDevicesRequest, token: String) {
        self.init(
            fleetArn: original.fleetArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension WorkLink.ListDomainsRequest: AWSPaginateStringToken {
    public init(_ original: WorkLink.ListDomainsRequest, token: String) {
        self.init(
            fleetArn: original.fleetArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension WorkLink.ListFleetsRequest: AWSPaginateStringToken {
    public init(_ original: WorkLink.ListFleetsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension WorkLink.ListWebsiteAuthorizationProvidersRequest: AWSPaginateStringToken {
    public init(_ original: WorkLink.ListWebsiteAuthorizationProvidersRequest, token: String) {
        self.init(
            fleetArn: original.fleetArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension WorkLink.ListWebsiteCertificateAuthoritiesRequest: AWSPaginateStringToken {
    public init(_ original: WorkLink.ListWebsiteCertificateAuthoritiesRequest, token: String) {
        self.init(
            fleetArn: original.fleetArn, 
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}


