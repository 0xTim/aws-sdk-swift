// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/master/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import NIO

extension IoTAnalytics {

    ///  Retrieves a list of channels.
    public func listChannelsPaginator(_ input: ListChannelsRequest, onPage: @escaping ([ChannelSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listChannels, resultKey: \ListChannelsResponse.channelSummaries, tokenKey: \ListChannelsResponse.nextToken, onPage: onPage)
    }
    
    ///  Lists information about data set contents that have been created.
    public func listDatasetContentsPaginator(_ input: ListDatasetContentsRequest, onPage: @escaping ([DatasetContentSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listDatasetContents, resultKey: \ListDatasetContentsResponse.datasetContentSummaries, tokenKey: \ListDatasetContentsResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves information about data sets.
    public func listDatasetsPaginator(_ input: ListDatasetsRequest, onPage: @escaping ([DatasetSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listDatasets, resultKey: \ListDatasetsResponse.datasetSummaries, tokenKey: \ListDatasetsResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of data stores.
    public func listDatastoresPaginator(_ input: ListDatastoresRequest, onPage: @escaping ([DatastoreSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listDatastores, resultKey: \ListDatastoresResponse.datastoreSummaries, tokenKey: \ListDatastoresResponse.nextToken, onPage: onPage)
    }
    
    ///  Retrieves a list of pipelines.
    public func listPipelinesPaginator(_ input: ListPipelinesRequest, onPage: @escaping ([PipelineSummary], EventLoop)->EventLoopFuture<Bool>) -> EventLoopFuture<Void> {
        return client.paginate(input: input, command: listPipelines, resultKey: \ListPipelinesResponse.pipelineSummaries, tokenKey: \ListPipelinesResponse.nextToken, onPage: onPage)
    }
    
}

extension IoTAnalytics.ListChannelsRequest: AWSPaginateStringToken {
    public init(_ original: IoTAnalytics.ListChannelsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension IoTAnalytics.ListDatasetContentsRequest: AWSPaginateStringToken {
    public init(_ original: IoTAnalytics.ListDatasetContentsRequest, token: String) {
        self.init(
            datasetName: original.datasetName, 
            maxResults: original.maxResults, 
            nextToken: token, 
            scheduledBefore: original.scheduledBefore, 
            scheduledOnOrAfter: original.scheduledOnOrAfter
        )
    }
}

extension IoTAnalytics.ListDatasetsRequest: AWSPaginateStringToken {
    public init(_ original: IoTAnalytics.ListDatasetsRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension IoTAnalytics.ListDatastoresRequest: AWSPaginateStringToken {
    public init(_ original: IoTAnalytics.ListDatastoresRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}

extension IoTAnalytics.ListPipelinesRequest: AWSPaginateStringToken {
    public init(_ original: IoTAnalytics.ListPipelinesRequest, token: String) {
        self.init(
            maxResults: original.maxResults, 
            nextToken: token
        )
    }
}


